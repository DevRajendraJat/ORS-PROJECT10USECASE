{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-service.service.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/client/client.component.css","webpack:///./src/app/client/client.component.html","webpack:///./src/app/client/client.component.ts","webpack:///./src/app/clientlist/clientlist.component.css","webpack:///./src/app/clientlist/clientlist.component.html","webpack:///./src/app/clientlist/clientlist.component.ts","webpack:///./src/app/college/college-list.component.html","webpack:///./src/app/college/college-list.component.ts","webpack:///./src/app/college/college.component.css","webpack:///./src/app/college/college.component.html","webpack:///./src/app/college/college.component.ts","webpack:///./src/app/course/course-list.component.html","webpack:///./src/app/course/course-list.component.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/employeelist/employeelist.component.css","webpack:///./src/app/employeelist/employeelist.component.html","webpack:///./src/app/employeelist/employeelist.component.ts","webpack:///./src/app/endpoint-service.service.ts","webpack:///./src/app/faculty/faculty-list.component.html","webpack:///./src/app/faculty/faculty-list.component.ts","webpack:///./src/app/faculty/faculty.component.css","webpack:///./src/app/faculty/faculty.component.html","webpack:///./src/app/faculty/faculty.component.ts","webpack:///./src/app/file/file.component.css","webpack:///./src/app/file/file.component.html","webpack:///./src/app/file/file.component.ts","webpack:///./src/app/followup/followup.component.css","webpack:///./src/app/followup/followup.component.html","webpack:///./src/app/followup/followup.component.ts","webpack:///./src/app/followuplist/followuplist.component.css","webpack:///./src/app/followuplist/followuplist.component.html","webpack:///./src/app/followuplist/followuplist.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-service.service.ts","webpack:///./src/app/job/job-list.component.css","webpack:///./src/app/job/job-list.component.html","webpack:///./src/app/job/job-list.component.ts","webpack:///./src/app/job/job.component.css","webpack:///./src/app/job/job.component.html","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/lead/lead.component.css","webpack:///./src/app/lead/lead.component.html","webpack:///./src/app/lead/lead.component.ts","webpack:///./src/app/leadlist/leadlist.component.css","webpack:///./src/app/leadlist/leadlist.component.html","webpack:///./src/app/leadlist/leadlist.component.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/login/forgotpassword.component.html","webpack:///./src/app/login/forgotpassword.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/signup.component.html","webpack:///./src/app/login/signup.component.ts","webpack:///./src/app/marksheet/getmarksheet.component.html","webpack:///./src/app/marksheet/getmarksheet.component.ts","webpack:///./src/app/marksheet/marksheet-list.component.html","webpack:///./src/app/marksheet/marksheet-list.component.ts","webpack:///./src/app/marksheet/marksheet.component.css","webpack:///./src/app/marksheet/marksheet.component.html","webpack:///./src/app/marksheet/marksheet.component.ts","webpack:///./src/app/marksheet/marksheetmerit-list.component.html","webpack:///./src/app/marksheet/marksheetmerit-list.component.ts","webpack:///./src/app/message/message-list.component.html","webpack:///./src/app/message/message-list.component.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/order/order.component.css","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/orderlist/orderlist.component.css","webpack:///./src/app/orderlist/orderlist.component.html","webpack:///./src/app/orderlist/orderlist.component.ts","webpack:///./src/app/patient/patient.component.css","webpack:///./src/app/patient/patient.component.html","webpack:///./src/app/patient/patient.component.ts","webpack:///./src/app/patientlist/patientlist.component.css","webpack:///./src/app/patientlist/patientlist.component.html","webpack:///./src/app/patientlist/patientlist.component.ts","webpack:///./src/app/prescription/prescription.component.css","webpack:///./src/app/prescription/prescription.component.html","webpack:///./src/app/prescription/prescription.component.ts","webpack:///./src/app/prescriptionlist/prescriptionlist.component.css","webpack:///./src/app/prescriptionlist/prescriptionlist.component.html","webpack:///./src/app/prescriptionlist/prescriptionlist.component.ts","webpack:///./src/app/role/role-list.component.html","webpack:///./src/app/role/role-list.component.ts","webpack:///./src/app/role/role.component.css","webpack:///./src/app/role/role.component.html","webpack:///./src/app/role/role.component.ts","webpack:///./src/app/route/route.component.css","webpack:///./src/app/route/route.component.html","webpack:///./src/app/route/route.component.ts","webpack:///./src/app/routelist/routelist.component.css","webpack:///./src/app/routelist/routelist.component.html","webpack:///./src/app/routelist/routelist.component.ts","webpack:///./src/app/service-locator.service.ts","webpack:///./src/app/shoping-cart/shoping-cart.component.css","webpack:///./src/app/shoping-cart/shoping-cart.component.html","webpack:///./src/app/shoping-cart/shoping-cart.component.ts","webpack:///./src/app/shoping-cartlist/shoping-cartlist.component.css","webpack:///./src/app/shoping-cartlist/shoping-cartlist.component.html","webpack:///./src/app/shoping-cartlist/shoping-cartlist.component.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/student/student-list.component.html","webpack:///./src/app/student/student-list.component.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/subject/subject-list.component.html","webpack:///./src/app/subject/subject-list.component.ts","webpack:///./src/app/subject/subject.component.css","webpack:///./src/app/subject/subject.component.html","webpack:///./src/app/subject/subject.component.ts","webpack:///./src/app/supplier/supplier.component.css","webpack:///./src/app/supplier/supplier.component.html","webpack:///./src/app/supplier/supplier.component.ts","webpack:///./src/app/supplierlist/supplierlist.component.css","webpack:///./src/app/supplierlist/supplierlist.component.html","webpack:///./src/app/supplierlist/supplierlist.component.ts","webpack:///./src/app/timetable/timetable-list.component.html","webpack:///./src/app/timetable/timetable-list.component.ts","webpack:///./src/app/timetable/timetable.component.css","webpack:///./src/app/timetable/timetable.component.html","webpack:///./src/app/timetable/timetable.component.ts","webpack:///./src/app/user/changepassword.component.html","webpack:///./src/app/user/changepassword.component.ts","webpack:///./src/app/user/myprofile.component.html","webpack:///./src/app/user/myprofile.component.ts","webpack:///./src/app/user/user-list.component.html","webpack:///./src/app/user/user-list.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/userslist/userslist.component.css","webpack:///./src/app/userslist/userslist.component.html","webpack:///./src/app/userslist/userslist.component.ts","webpack:///./src/app/utility/data-validator.ts","webpack:///./src/app/wish/wish.component.css","webpack:///./src/app/wish/wish.component.html","webpack:///./src/app/wish/wish.component.ts","webpack:///./src/app/wishlist/wishlist.component.css","webpack:///./src/app/wishlist/wishlist.component.html","webpack:///./src/app/wishlist/wishlist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { StudentComponent } from './student/student.component';\nimport { CollegeComponent } from './college/college.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\nimport { SignUpComponent } from './login/signup.component';\nimport { MessageComponent } from './message/message.component';\nimport { MessageListComponent } from './message/message-list.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { UserComponent } from './user/user.component';\nimport { RoleComponent } from './role/role.component';\nimport { CourseComponent } from \"./course/course.component\";\nimport { SubjectComponent } from \"./subject/subject.component\"\nimport { Subject, from } from 'rxjs';\nimport { RoleListComponent } from './role/role-list.component';\nimport { CourseListComponent } from \"./course/course-list.component\";\nimport { FacultyComponent } from \"./faculty/faculty.component\";\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\nimport { TimetableComponent } from \"./timetable/timetable.component\";\nimport { FileComponent } from './file/file.component';\nimport { TimetableListComponent } from './timetable/timetable-list.component';\nimport { SubjectListComponent } from './subject/subject-list.component';\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\nimport { LoaderComponent } from './loader/loader.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { MyprofileComponent } from './user/myprofile.component';\nimport { OrderComponent } from './order/order.component';\nimport { JobComponent } from './job/job.component';\nimport { JobListComponent } from './job/job-list.component';\nimport { EmployeelistComponent } from './employeelist/employeelist.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { ClientComponent } from './client/client.component';\nimport { ClientlistComponent } from './clientlist/clientlist.component';\nimport { ShopingCartComponent } from './shoping-cart/shoping-cart.component';\nimport { ShopingCartlistComponent } from './shoping-cartlist/shoping-cartlist.component';\nimport { PatientlistComponent } from './patientlist/patientlist.component';\nimport { PatientComponent } from './patient/patient.component';\nimport { OrderlistComponent } from './orderlist/orderlist.component';\nimport { LeadComponent } from './lead/lead.component';\nimport { WishComponent } from './wish/wish.component';\nimport { WishlistComponent } from './wishlist/wishlist.component';\nimport { LeadlistComponent } from './leadlist/leadlist.component';\nimport { PrescriptionComponent } from './prescription/prescription.component';\nimport { PrescriptionlistComponent } from './prescriptionlist/prescriptionlist.component';\nimport { UsersComponent } from './users/users.component';\nimport { UserslistComponent } from './userslist/userslist.component';\nimport { FollowupComponent } from './followup/followup.component';\nimport { FollowuplistComponent } from './followuplist/followuplist.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { SupplierlistComponent } from './supplierlist/supplierlist.component';\nimport { RouteComponent } from './route/route.component';\nimport { RoutelistComponent } from './routelist/routelist.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full'\n    },\n    {\n        path: 'dashboard',\n        component: DashboardComponent\n    },\n    {\n        path: 'loader',\n        component: LoaderComponent\n\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    }\n    ,\n    {\n        path: 'login/:userparams',\n        component: LoginComponent\n    },\n\n    {\n        path: 'spinner',\n        component: SpinnerComponent\n    },\n    {\n        path: 'forgotpassword',\n        component: ForgotPasswordComponent\n    },\n    {\n        path: 'signup',\n        component: SignUpComponent\n    },\n    {\n        path: 'message',\n        component: MessageComponent,\n\n    },\n    {\n        path: 'message/:id',\n        component: MessageComponent\n    },\n    {\n        path: 'messagelist',\n        component: MessageListComponent\n\n    },\n    {\n        path: 'marksheet',\n        component: MarksheetComponent\n\n    },\n    {\n        path: 'marksheet/:id',\n        component: MarksheetComponent\n\n    },\n    {\n        path: 'marksheetlist',\n        component: MarksheetListComponent\n\n    },\n    {\n        path: 'marksheetmeritlist',\n        component: MarksheetmeritListComponent\n\n    },\n    {\n        path: 'getmarksheet',\n        component: GetmarksheetComponent\n\n    },\n    {\n        path: 'college',\n        component: CollegeComponent\n\n    },\n    {\n        path: 'college/:id',\n        component: CollegeComponent\n\n    },\n    {\n        path: 'collegelist',\n        component: CollegeListComponent\n\n    },\n    {\n        path: 'student',\n        component: StudentComponent\n\n    },\n    {\n        path: 'student/:id',\n        component: StudentComponent\n\n    },\n    {\n        path: 'studentlist',\n        component: StudentListComponent\n\n    },\n    {\n        path: 'user',\n        component: UserComponent\n\n    },\n    {\n        path: 'user/:id',\n        component: UserComponent\n\n    },\n    {\n        path: 'userlist',\n        component: UserListComponent\n\n    },\n    {\n        path: 'role',\n        component: RoleComponent\n\n    },\n    {\n        path: 'rolelist',\n        component: RoleListComponent\n\n    },\n    {\n        path: 'role/:id',\n        component: RoleComponent\n\n    },\n    {\n        path: 'course',\n        component: CourseComponent\n\n    },\n\n\n\n    {\n        path: 'supplier',\n        component: SupplierComponent\n\n    },\n    {\n        path: 'supplier/:id',\n        component: SupplierComponent\n\n    },\n    {\n        path: 'supplierlist',\n        component: SupplierlistComponent\n\n    },\n\n    {\n        path: 'route',\n        component: RouteComponent\n\n    },\n    {\n        path: 'route/:id',\n        component: RouteComponent\n\n    },\n    {\n        path: 'routelist',\n        component: RoutelistComponent\n\n    },\n\n    {\n        path: 'courselist',\n        component: CourseListComponent\n\n    },\n\n    {\n        path: 'followup',\n        component: FollowupComponent\n\n    },\n    {\n        path: 'followup/:id',\n        component: FollowupComponent\n\n    },\n    {\n        path: 'followuplist',\n        component: FollowuplistComponent\n\n    },\n\n\n    {\n        path: 'course/:id',\n        component: CourseComponent\n\n    },\n    {\n\n        path: 'faculty',\n        component: FacultyComponent\n\n    },\n    {\n        path: 'facultylist',\n        component: FacultyListComponent\n\n    },\n    {\n        path: 'faculty/:id',\n        component: FacultyComponent\n\n    },\n    {\n        path: 'timetable',\n        component: TimetableComponent\n\n\n    },\n    {\n        path: 'timetablelist',\n        component: TimetableListComponent\n\n    },\n    {\n        path: 'timetable/:id',\n        component: TimetableComponent\n\n    },\n    {\n        path: 'subject',\n        component: SubjectComponent\n\n    },\n    {\n        path: 'subjectlist',\n        component: SubjectListComponent\n\n    },\n    {\n        path: 'order',\n        component: OrderComponent\n\n    },\n    {\n        path: 'order/:id',\n        component: OrderComponent\n\n    },\n    {\n        path: 'orderlist',\n        component: OrderlistComponent\n\n    },\n    {\n        path: 'employee',\n        component: EmployeeComponent\n\n    },\n    {\n        path: 'employee/:id',\n        component: EmployeeComponent\n\n    },\n    {\n        path: 'employeelist',\n        component: EmployeelistComponent\n\n    },\n\n\n    {\n        path: 'ShopingCart',\n        component: ShopingCartComponent\n\n    },\n\n    {\n        path: 'ShopingCartlist',\n        component: ShopingCartlistComponent\n\n    },\n    {\n        path: 'ShopingCart/:id',\n        component: ShopingCartComponent\n\n    },\n\n    {\n        path: 'job',\n        component: JobComponent\n\n    },\n    {\n        path: 'job/:id',\n        component: JobComponent\n\n    },\n    {\n        path: 'joblist',\n        component: JobListComponent\n\n    },\n    {\n        path: 'client',\n        component: ClientComponent\n\n    },\n    {\n        path: 'client/:id',\n        component: ClientComponent\n\n    },\n    {\n        path: 'clientlist',\n        component: ClientlistComponent\n\n    },\n\n\n    {\n        path: 'users',\n        component: UsersComponent\n\n    },\n    {\n        path: 'users/:id',\n        component: UsersComponent\n\n    },\n    {\n        path: 'userslist',\n        component: UserslistComponent\n\n    },\n\n\n\n\n    {\n        path: 'prescription',\n        component: PrescriptionComponent\n\n    },\n    {\n        path: 'prescription/:id',\n        component: PrescriptionComponent\n\n    },\n    {\n        path: 'prescriptionlist',\n        component: PrescriptionlistComponent\n\n    },\n\n\n\n    {\n        path: 'job',\n        component: JobComponent\n\n    },\n    {\n        path: 'job/:id',\n        component: JobComponent\n\n    },\n    {\n        path: 'joblist',\n        component: JobListComponent\n\n    },\n    {\n        path: 'lead',\n        component: LeadComponent\n\n    },\n    {\n        path: 'lead/:id',\n        component: LeadComponent\n\n    },\n    {\n        path: 'leadlist',\n        component: LeadlistComponent\n\n    },\n    {\n        path: 'patient',\n        component: PatientComponent\n\n    },\n    {\n        path: 'patient/:id',\n        component: PatientComponent\n\n    },\n    {\n        path: 'patientlist',\n        component: PatientlistComponent\n\n    },\n\n    {\n        path: 'shoping',\n        component: ShopingCartComponent\n\n    },\n    {\n        path: 'shoping/:id',\n        component: ShopingCartComponent\n\n    },\n    {\n        path: 'shopinglist',\n        component: ShopingCartlistComponent\n\n    },\n\n\n    {\n        path: 'wish',\n        component: WishComponent\n\n    },\n    {\n        path: 'wish/:id',\n        component: WishComponent\n\n    },\n    {\n        path: 'wishlist',\n        component: WishlistComponent\n\n    },\n\n\n\n    {\n        path: 'subject/:id',\n        component: SubjectComponent\n\n    },\n    {\n        path: 'myprofile',\n        component: MyprofileComponent\n    },\n    {\n        path: 'file',\n        component: FileComponent\n    },\n    {\n        path: 'changepassword',\n        component: ChangepasswordComponent\n\n\n    },\n\n\n\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\n\n\nexport class AppRoutingModule { }","module.exports = \".dropbtn {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 16px;\\n    font-size: 16px;\\n    border: none;\\n  }\\n  \\n  .dropdown {\\n    position: relative;\\n    display: inline-block;\\n  }\\n  \\n  .dropdown-content {\\n    display: none;\\n    position: absolute;\\n    background-color: #f1f1f1;\\n    min-width: 160px;\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n    z-index: 1;\\n  }\\n  \\n  .dropdown-content a {\\n    color: black;\\n    padding: 12px 16px;\\n    text-decoration: none;\\n    display: block;\\n  }\\n  \\n  .app {\\n    margin: 48px;\\n  }\\n  \\n  .buttons {\\n    display: flex;\\n    max-width: 500px;\\n    justify-content: space-evenly;\\n    margin-bottom: 48px;\\n\\n  }\\n\\n  \\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7SUFDNUMsVUFBVTtFQUNaOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztFQUNoQjs7RUFDQTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLG1CQUFtQjs7RUFFckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wYnRuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbiAgXG4gIC5kcm9wZG93biB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICBcbiAgLmRyb3Bkb3duLWNvbnRlbnQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG4gICAgbWluLXdpZHRoOiAxNjBweDtcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG4gIFxuICAuZHJvcGRvd24tY29udGVudCBhIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuYXBwIHtcbiAgICBtYXJnaW46IDQ4cHg7XG4gIH1cbiAgXG4gIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcblxuICB9XG5cbiAgXG4gICJdfQ== */\"","module.exports = \"\\n  <router-outlet></router-outlet>\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, Observable,timer } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{\n \n  \n  \n}\n\n\n\n\n \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AppComponent } from './app.component';\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { StudentComponent } from './student/student.component';\nimport { CollegeComponent } from './college/college.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { HttpServiceService } from './http-service.service';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DataValidator } from './utility/data-validator';\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\nimport { SignUpComponent } from './login/signup.component';\nimport { MessageComponent } from './message/message.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MessageListComponent } from './message/message-list.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { UserComponent } from './user/user.component';\n\nimport { UserListComponent } from './user/user-list.component';\n\nimport { RoleComponent } from './role/role.component';\nimport { CourseComponent } from './course/course.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { RoleListComponent } from './role/role-list.component';\nimport { TimetableComponent } from './timetable/timetable.component';\nimport { CourseListComponent } from \"./course/course-list.component\";\nimport { FacultyComponent } from './faculty/faculty.component';\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\nimport { FileComponent } from './file/file.component';\nimport { TimetableListComponent } from \"./timetable/timetable-list.component\";\nimport { SubjectListComponent } from \"./subject/subject-list.component\";\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\nimport { LoaderComponent } from \"./loader/loader.component\";\nimport { NavbarComponent } from './navbar/navbar.component';\n\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MyprofileComponent } from './user/myprofile.component';\nimport { AuthService } from './auth-service.service';\nimport { OrderComponent } from './order/order.component';\nimport { JobComponent } from './job/job.component';\nimport { JobListComponent } from './job/job-list.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeelistComponent } from './employeelist/employeelist.component';\nimport { ClientComponent } from './client/client.component';\nimport { ClientlistComponent } from './clientlist/clientlist.component';\nimport { ShopingCartComponent } from './shoping-cart/shoping-cart.component';\nimport { ShopingCartlistComponent } from './shoping-cartlist/shoping-cartlist.component';\nimport { PatientComponent } from './patient/patient.component';\nimport { PatientlistComponent } from './patientlist/patientlist.component';\nimport { OrderlistComponent } from './orderlist/orderlist.component';\nimport { LeadComponent } from './lead/lead.component';\nimport { WishComponent } from './wish/wish.component';\nimport { WishlistComponent } from './wishlist/wishlist.component';\nimport { LeadlistComponent } from './leadlist/leadlist.component';\nimport { PrescriptionComponent } from './prescription/prescription.component';\nimport { PrescriptionlistComponent } from './prescriptionlist/prescriptionlist.component';\nimport { UsersComponent } from './users/users.component';\nimport { UserslistComponent } from './userslist/userslist.component';\nimport { FollowupComponent } from './followup/followup.component';\nimport { FollowuplistComponent } from './followuplist/followuplist.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { SupplierlistComponent } from './supplierlist/supplierlist.component';\nimport { RouteComponent } from './route/route.component';\nimport { RoutelistComponent } from './routelist/routelist.component';\n// import { AuthService } from './auth.service';\n\n\nexport function myHttpLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MarksheetComponent,\n    MarksheetListComponent,\n    StudentComponent,\n    StudentListComponent,\n    CollegeComponent,\n    CollegeListComponent,\n    LoginComponent,\n    DashboardComponent,\n    ForgotPasswordComponent,\n    SignUpComponent,\n    MessageComponent,\n    MessageListComponent,\n    UserComponent,\n    UserListComponent,\n\n    RoleComponent,\n    RoleListComponent,\n    CourseComponent,\n    SubjectComponent,\n    SubjectListComponent,\n    TimetableComponent,\n    CourseListComponent,\n    FacultyComponent,\n    FacultyListComponent,\n    TimetableComponent,\n    TimetableListComponent,\n    MarksheetmeritListComponent,\n    GetmarksheetComponent,\n    ChangepasswordComponent,\n    LoaderComponent,\n    FileComponent,\n    NavbarComponent,\n    SpinnerComponent,\n    FooterComponent,\n    MyprofileComponent,\n    OrderComponent,\n    JobComponent,\n    JobListComponent,\n    EmployeeComponent,\n    EmployeelistComponent,\n    ClientComponent,\n    ClientlistComponent,\n    ShopingCartComponent,\n    ShopingCartlistComponent,\n    PatientComponent,\n    PatientlistComponent,\n    OrderlistComponent,\n    LeadComponent,\n  \n    WishComponent,\n    WishlistComponent,\n    LeadlistComponent,\n    PrescriptionComponent,\n    PrescriptionlistComponent,\n    UsersComponent,\n    UserslistComponent,\n    FollowupComponent,\n    FollowuplistComponent,\n    SupplierComponent,\n    SupplierlistComponent,\n    RouteComponent,\n    RoutelistComponent,\n  \n\n\n\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: myHttpLoader,\n        deps: [HttpClient]\n      }\n    }),\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS, useClass: AuthService, multi: true\n    },\n    HttpServiceService,\n    DataValidator,\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule {\n\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements HttpInterceptor {\n\n  constructor(private http: HttpServiceService) { }\n  \n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (localStorage.getItem('fname')) {\n      req = req.clone({\n        setHeaders: {\n        \"withCredentials\" : \"true\",\n        \"name\" : \"Raj\",\n          \n        \n        }\n      })\n    }\n        console.log(req.headers.get(\"Authorization\")+\"------------------->>>\")\n    return next.handle(req);\n\n  }\n\n}","import { OnInit, Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { ServiceLocatorService } from './service-locator.service';\nimport { HttpServiceService } from './http-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from './base.component';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { element } from '@angular/core/src/render3';\n\nexport class BaseListCtl extends BaseCtl {  \n  \n    @ViewChildren(\"checkboxes\") checkboxes: QueryList<ElementRef>;\n  deleteRecordList: any = [];\n  isMasterSel:boolean = false ;\n  checkList=0;\n\n  constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(endpoint, locator, route);    \n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {   \n    this.preload();\n    this.search();\n    this.isMasterSel = false ;\n  }\n\n  display() {\n    this.search();\n  }\n\n  submit() {\n    this.form.pageNo=0;\n    if(this.form.searchParams.roleId==\"undefined\" || this.form.searchParams.id==\"undefined\"){\n    \n      this.form.searchParams={}\n      this.search();\n    }else{\n    this.search();\n    }\n  }\n  \n  delete(id) {\n    super.delete(id, function () {\n      this.search();\n    });\n  }\n\n\n  next() {\n    this.form.pageNo++;\n     this.display(); \n   \n   \n    this.isMasterSel = false ;  \n  //  this.searchOperation('previous');\n  }\n\nexit(){ \n   \n  location.reload();\n}\n  previous() {\n    if (this.form.pageNo > 0) {\n      this.form.pageNo--\n    //  this.display(); \n    this.isMasterSel = false ;\n    this.searchOperation('previous');    \n    }\n  }\n\n  \n\n  checkUncheckAll(event) {\n    const checked = event.target.checked;\n    this.checkboxes.forEach((element) => {     \n        element.nativeElement.checked = checked     \n    });   \n  }\n  checklistUpdate(){\n\n    this.isMasterSel=false;\n    this.checkList=0;\n    this.checkboxes.forEach((element) =>{\nif(element.nativeElement.checked==true){\n  this.checkList=this.checkList+1;\n}\n    });\n    if(this.checkList==this.form.list.length){\n      this.isMasterSel=true;\n\n    }\n  }\n\n\n\n  \n//   deleteMany(){\n//   console.log('delete Many Records starts ');\n//   console.log('this.form.pageNo ' +this.form.pageNo);  \n//   var msg : String =''\n//   this.deleteRecordList.length=0;\n//   console.log('record deleting start ')\n//   var isRecordSelected:boolean = false ;\n \n//     this.checkboxes.forEach((element) => {\n//       if (element.nativeElement.checked) {\n//         // console.log('record deleting ' + element.nativeElement.id)\n//         this.deleteRecordList.push(element.nativeElement.id);\n//         isRecordSelected = true ;\n//       }\n//     });     \n  \n//     if(isRecordSelected){\n//       console.log('record(s) for delete ' + this.deleteRecordList)        \n//       this.serviceLocator.httpService.get(this.api.deleteMany + \"/\" + this.deleteRecordList + '?pageNo=' +this.form.pageNo, function (res) {\n//         if (res.success) {\n//             console.log('Inside response success ')\n//           //  this.deleteMany();\n//          //  this.form.message = \"Data is deleted\";\n//        //  msg =\"Data is deleted\";\n//         //  this.form.message = res.result.message;\n       \n//           console.log('deleteMany Calling Callback'); \n//           this.search();  \n//     } else {\n//       this.form.error = true;\n//       this.form.message = res.result.message;\n//     }\n//   });\n//   this.form.message = \"Data is deleted\" ;\n//   console.log('this.form.pageNo ' +this.form.pageNo);  \n  \n//     }else{\n//       this.form.message = \"Select Atleast One Record\";\n//         this.form.error = true;\n//     console.log('No record(s) for delete ')\n//   }\n//   console.log('delete Many Records ends ');\n// }\n\n\n\ndeleteMany(){\n  console.log('delete Many Records starts ');\n  console.log('this.form.pageNo ' +this.form.pageNo);  \n  this.form.error = false;\n  this.deleteRecordList.length=0;\n  console.log('record deleting start ')\n  var isRecordSelected:boolean = false ;\n \n    this.checkboxes.forEach((element) => {\n      if (element.nativeElement.checked) {\n        // console.log('record deleting ' + element.nativeElement.id)\n        this.deleteRecordList.push(element.nativeElement.id);\n        isRecordSelected = true ;\n      }\n    });     \n  \n    if(isRecordSelected){\n      console.log('record(s) for delete ' + this.deleteRecordList) ;       \n      super.deleteMany(this.deleteRecordList + '?pageNo=' +this.form.pageNo,function(){\n      //  this.search();  \n            \n      });  \n    }else{\n      this.form.message = \"Select Atleast One Record\";\n        this.form.error = true;\n    console.log('No record(s) for delete ')\n  }\n  this.isMasterSel = false ;  \n  console.log('delete Many Records ends ');\n}\n\n\ngenerateReport(){\n  \n}\n\n}\n\n","import { OnInit } from '@angular/core';\nimport { ServiceLocatorService } from './service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpServiceService } from './http-service.service';\nimport { formatNumber } from '@angular/common';\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\n\n\nexport class BaseCtl implements OnInit {\n\n  public api = {\n    endpoint: null,\n    get: null,\n    save: null,\n    search: null,\n    delete: null,\n    deleteMany: null,\n    preload: null,\n    report: null,\n    address:null\n  }\n\n  initApi(ep) {\n    this.api.endpoint = ep;\n    this.api.get = ep + \"/get\";\n    this.api.save = ep + \"/save\";\n    this.api.search = ep + \"/search\";\n    this.api.delete = ep + \"/delete\";\n    this.api.deleteMany = ep + \"/deleteMany\";\n    this.api.preload = ep + \"/preload\";\n    this.api.report = ep + \"/report\";\n    this.api.address = ep + \"/address\";\n\n    console.log(\"API\", this.api);\n  }\n\n  /**\n   * Form contains preload data, error/sucess message \n   */\n  public form : any= {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo: 0\n\n  };\n  nextList = 0;\n  /**\n   * Initialize services \n   * \n   * @param serviceLocator \n   * @param route \n   */\n  constructor(public endpoint, public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\n\n    var _self = this;\n\n    _self.initApi(endpoint);\n\n    /**\n     * Get primary key from path variale\n     */\n    serviceLocator.getPathVariable(route, function (params) {\n      _self.form.data.id = params[\"id\"];\n      console.log('I GOT ID', _self.form.data.id);\n    })\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n    this.preload();\n    if (this.form.data.id && this.form.data.id > 0) {\n      this.display();\n    }\n  }\n\n  /**\n   * Loded preload data\n   */\n  preload() {\n    console.log(\"preload start\")\n    var _self = this;\n    this.serviceLocator.httpService.get(_self.api.preload, function (res) {\n      console.log(\"base list preload\",_self.api.preload)\n      if (res.success) {\n        _self.form.preload = res.result;\n      } else {\n        _self.form.error = true\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  /**\n   * Override by childs \n   * \n   * @param form \n   */\n  validateForm(form) {\n  }\n\n\n  /**\n   * Searhs records \n   */\n    search() {\n    console.log(\"search start\")\n    var _self = this;\n    console.log(\"Search Form\", _self.form.searchParams);\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\n\n\n      if (res.success) {\n        _self.form.list = res.result.data;\n        _self.nextList = res.result.nextList;\n\n\n        if (_self.form.list.length == 0) {\n          \n          _self.form.message = \"No record found\";\n          _self.form.error = true;\n        }\n        console.log(\"List Size\", _self.form.list.length);\n      } else {\n        _self.form.error = false;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  searchOperation(operation: String) {\n    console.log(\"previous/next search start\")\n    var _self = this;\n    console.log(\"Search Form\", _self.form.searchParams);\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\n\n      if (operation == 'next' || operation == 'previous') {\n        _self.nextList = res.result.nextList;\n        _self.form.message = null;\n        _self.form.error = false;\n      }\n\n      if (res.success) {\n        _self.form.list = res.result.data;\n        if (_self.form.list.length == 0) {\n          _self.form.message = \"No record found\";\n          _self.form.error = true;\n        }\n        console.log(\"List Size\", _self.form.list.length);\n      } else {\n        _self.form.error = false;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  /**\n   * Contains display logic. It fetches data from database for the primary key \n   */\n  display() {\n\n    var _self = this;\n    console.log('Inside display method');\n    this.serviceLocator.httpService.get(_self.api.get + \"/\" + _self.form.data.id, function (res) {\n     _self.form.data.id=0;\n      if (res.success) {\n        _self.populateForm(_self.form.data, res.result.data);\n      } else {\n        _self.form.error = true;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  /**\n   * Populate HTML form data\n   * Overridden by child classes.\n   * \n   * @param form \n   * @param data \n   */\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'formid in base ctl populate form');\n  }\n\n  /**\n   * Contains submit logic. It saves data\n   */\n\n\n  submit() {\n    var _self = this;\n\n    console.log(this.form + \"submit running start\");\n    console.log(\"form data going to be submit\" + this.form.data);\n    //  console.log(\"form data going to be submit\" + this.studentId);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n       _self.form.inputerror = {};\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        //  console.log(\"--------------------.\");\n        //return _self.form.data.id ;\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data.id;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  delete(id, callback?) {\n    var _self = this;\n    this.serviceLocator.httpService.get(_self.api.delete + \"/\" + id, function (res) {\n      if (res.success) {\n        _self.form.message = \"Data is deleted\";\n        if (callback) {\n          console.log('Response Success and now Calling Callback');\n          //  callback();  \n          this.search();\n        }\n      } else {\n        _self.form.error = true;\n        _self.form.message = res.result.message;\n      }\n    });\n  }\n\n  deleteMany(id, callback?) {\n    var _self = this;\n    this.serviceLocator.httpService.post(_self.api.deleteMany + \"/\" + id, this.form.data, function (res) {\n      if (res.success) {\n        _self.form.message = \"Data is deleted\";\n\n        if (callback) {\n          console.log('Response Success and now Calling Callback');\n          _self.form.list = res.result.data;\n          console.log(\"List ::  \", + res.data);\n          console.log(\"List Size\", _self.form.list.length);\n          //  callback();       \n        }\n      } else {\n        _self.form.error = true;\n        _self.form.message = res.result.message;\n      }\n    });\n  }\n\n\n  generateReport() {\n    var _self = this;\n    console.log('********* Generating Report ********************');\n    this.serviceLocator.httpService.get(_self.api.report, function (res) {\n\n      if (res.success) {\n        console.log('*********  Report Generated ********************');\n        alert('pass');\n\n      } else {\n        console.log('********* Error in Generating Report  ********************');\n        alert('fail');\n      }\n    });\n\n  }\n  /**\n   * Forward to page\n   * @param page \n   */\n\n  forward(page) {\n    console.log(page + '--->>page value');\n    this.serviceLocator.forward(page);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC9jbGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Client' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Client' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'name' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Name' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Address' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Address' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.address}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Priority' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"priority\\\" [(ngModel)]=\\\"form.data.priority\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Priority' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Clist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.priority != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.priority}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Phone' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter phone' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.phone}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/clientlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.CLIENT, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.address);\n    flag = flag && validator.isNotNullObject(form.phone);\n    flag = flag && validator.isNotNullObject(form.priority);\n\n\n    return flag;\n  }\n\n  limitInput(event: any, maxLength: number) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.address = data.address;\n    form.phone = data.phone;\n    form.prority = data.prority;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudGxpc3QvY2xpZW50bGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Client List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n          \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.address\\\"\\n            placeholder=\\\"{{ 'Search Address' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'Address')\\\">\\n          <div *ngIf=\\\"!isValidAddressInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phone\\\"\\n            placeholder=\\\"{{'Search Phone' | translate}}\\\" (input)=\\\"validateInput($event, 'Phone')\\\">\\n          <div *ngIf=\\\"!isValidPhoneInput\\\" class=\\\"text-danger\\\">\\n            Please enter numbers only.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">  \\n          <select class=\\\"form-control\\\" name=\\\"priority\\\" [(ngModel)]=\\\"form.searchParams.priority\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Priority' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Clist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/client')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Client' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Name' | translate}}</th>\\n              <th>{{'Address' | translate}}</th>\\n              <th>{{'Phone' | translate}}</th>\\n              <th>{{'Priority' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.address }}</td>\\n              <td>{{ m.phone }}</td>\\n              <td>{{ m.priority}}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/client/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/clientlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-clientlist',\n  templateUrl: './clientlist.component.html',\n  styleUrls: ['./clientlist.component.css']\n})\nexport class ClientlistComponent extends BaseListCtl {\n  myKey = \"\";\n\n\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo: 0\n  };\n\n\n\n  base64Data: any;\n  retrieveResonse: any;\n  message: string;\n  isValidNameInput: boolean = true;\n  isValidAddressInput: boolean = true;\n  isValidPhoneInput: boolean = true;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.CLIENT, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n   \n  if (field === 'name') {\n    const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n    if (containsNonAlphabetic) {\n      console.log('Please enter letters and spaces only.');\n      this.isValidNameInput = false;\n    } else {\n      this.isValidNameInput = true;\n    }\n  }\n\n  if (field === 'Address') {\n    const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n    if (containsNonAlphabetic) {\n      console.log('Please enter letters and spaces only.');\n      this.isValidAddressInput = false;\n    } else {\n      this.isValidAddressInput = true;\n    }\n  }\n  if (field === 'Phone') {\n    this.isValidPhoneInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n  }\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%;\\nbackground: url(assets/files/211.jpg) no-repeat center center;\\n background-repeat: no-repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n       <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'College List' | translate }}</h1>\\n        </div>\\n      </div> \\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select name' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/college')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add College' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n     \\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                <th>{{'S.No.' | translate }}</th>\\n                <th>{{'Name' | translate }}</th>\\n                <th>{{'Address' | translate }}</th>\\n                <th>{{'Phone' | translate }}</th>\\n                <th>{{'City' | translate }}</th>\\n                <th>{{'State' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.name }} </td>\\n                <td> {{ m.address }} </td>\\n                <td> {{ m.phoneNo }} </td>\\n                <td> {{ m.city }} </td>\\n                <td> {{ m.state }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/college/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n                \\n              </tr>\\n            </tbody>\\n            </table>\\n              <table style=\\\"width: 100%;\\\">\\n                <tr>\\n                  <td style=\\\"width: 50%;\\\">\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                }} </button></td>\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/collegelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n    \\n    \\n            \\n                <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                  translate }}</button></td>\\n                </tr>\\n                </table>\\n    \\n            \\n          \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-college-list',\n  templateUrl: './college-list.component.html',\n  styleUrls: ['./college.component.css']\n})\nexport class CollegeListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.COLLEGE, locator, route);\n  }\n\n}","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add College' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update College' | translate }}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Name' | translate }}\\\">\\n              </div>\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.name}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Address' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"addr\\\" [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Address' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.address}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'City' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"form.data.city\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter City' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.city}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'State' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter State' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Phone No.' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phnNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Phone No.' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/collegelist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-college',\n  templateUrl: './college.component.html',\n  styleUrls: ['./college.component.css']\n})\nexport class CollegeComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.COLLEGE, locator, route);\n  }\n\n\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.phoneNo);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.address = data.address;\n    form.state = data.state;\n    form.city = data.city;\n    form.phoneNo = data.phoneNo;\n    console.log('Populated Form', form);\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\"\\n style=\\\"padding-top: 3%;\\npadding-bottom: 15%;\\nbackground: url(assets/files/wav1.jpg) no-repeat center center;\\n background-repeat: no-repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\nheight:90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Course List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select CourseName' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.duration\\\"\\n            placeholder=\\\"{{'Search Duration' | translate}}\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/course')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Course' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No.' | translate }}</th>\\n                <th>{{'Name' | translate }}</th>\\n                <th>{{'Duration' | translate }}</th>\\n                <th>{{'Description' | translate }}</th>\\n                <th>{{'Edit' | translate }}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.courseName}} </td>\\n                <td> {{ m.duration }} </td>\\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/course/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n\\n              </tr>\\n              \\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/courselist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.COURSE, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Course' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Course' | translate }}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Course Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.data.courseName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Course Name' | translate }}\\\">\\n              </div>\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.courseName}} </span>\\n          </div>\\n\\n\\n\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Duration' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\" >\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                </div>\\n            \\n                <select class=\\\"form-control\\\" name=\\\"duration\\\"\\n                  [(ngModel)]=\\\"form.data.duration\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\n                  <option [value]=\\\"1\\\">1 Year</option>\\n                  <option [value]=\\\"2\\\">2 Year</option>\\n                  <option [value]=\\\"3\\\">3 Year</option>\\n                  <option [value]=\\\"4\\\">4 Year</option>\\n                  <option [value]=\\\"5\\\">5 Year</option>\\n\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.duration}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                </div>\\n                <textarea class=\\\"form-control\\\" placeholder=\\\"{{'Enter Description' | translate }}\\\" name=\\\"description\\\"\\n                  [(ngModel)]=\\\"form.data.description\\\"></textarea>\\n              </div>\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\n          </div>\\n\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/courselist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List\\n                ' | translate }}              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent extends BaseCtl {\n\n  selected = null;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.COURSE, locator, route);\n  }\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n \n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.courseName);\n    flag = flag && validator.isNotNullObject(form.duration);\n    flag = flag && validator.isNotNullObject(form.description);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.courseName = data.courseName;\n    form.duration = data.duration;\n    form.description = data.description;\n    console.log('Populated Form', form);\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <app-navbar></app-navbar>\\n<div>\\n    <p class=\\\"text-info font-weight-bold\\\" style=\\\"padding-left: 30%; font-size: 70px;\\\">WELCOME TO ORS</p>\\n    <div style=\\\"background-image: url(../../assets/files/IndexView.png); \\n        -webkit-background-size: cover;\\n        -moz-background-size: cover;\\n        -o-background-size: cover;\\n        background-size: 100%;\\n        padding-bottom:18%;\\n        padding-top: 5%;\\n        \\\">\\n        <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\n    </div>\\n</div>\\n<app-footer></app-footer> -->\\n\\n\\n<style>\\n  body{\\n  \\n  background-image: url('<%=ORSView.APP_CONTEXT%>/img/201.webp');\\n      background-size: 100%;\\n  \\n  \\n  }\\n  .cl{\\n    font-family: Lucida Calligraphy; \\n  \\n   /*  font-family: Monotype Corsiva;\\n    \\n   font-family: Footlight MT Light; */\\n    }\\n  </style>\\n<app-navbar></app-navbar>\\n\\n<div>  \\n  <!-- <div class=\\\"img-fluid\\\" style=\\\"background-image: url(../../assets/files/welcomeView2.png); \\n      -webkit-background-size: cover;\\n      -moz-background-size: cover;\\n      -o-background-size: cover;\\n      background-size: 100%;\\n      padding-bottom:18%;\\n      padding-top: 5%;\\n      \\\">\\n      <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\n  </div> -->\\n\\n  <div class=\\\"row \\\" style=\\\"padding-bottom: 14%;\\n   background: url(assets/files/1026.jpg) no-repeat center center;\\n   \\n  background-attachment: fixed;\\n  background-size: cover; width:cover;\\n    height: 120vh;\\\">\\n    <p class=\\\"text-cs1 font-family ml-4 font-weight-bold\\\" style=\\\"padding-top: 1%; \\n    padding-left: 36%;font-size: 45px; color: rgb(4, 204, 226);\\\">{{'WELCOME TO ORS' | translate}}</p></div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, #001a33(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .log1 {\\n    padding-top: 13%;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n</style>\\n\\n<div class=\\\"row\\\" style=\\\"\\n  padding: 2% 0;\\n  background: url('assets/files/1291.jpg') no-repeat center center;\\n  background-attachment: fixed;\\n  background-size: cover;\\n  width: 100%;\\n  height: auto;\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body input-group-addon grad\\\">\\n        <form name=\\\"userForm\\\">\\n          <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Employee' | translate }}\\n          </h2>\\n          <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Employee' | translate }}\\n          </h2>\\n\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n\\n          <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\n            </div>\\n            <span *ngIf=\\\"form.inputerror!=name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n          </div> \\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Department' | translate }}</b>\\n              <span class=\\\"required-field\\\">*</span></span>\\n\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n              </div>\\n              <select class=\\\"form-control\\\" name=\\\"department\\\" [(ngModel)]=\\\"form.data.department\\\" aria-label=\\\"ngSelected\\\">\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Department' | translate }}</option>\\n                <option *ngFor=\\\"let obj of form.preload.empList\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <span *ngIf=\\\"form.inputerror.department != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n            {{form.inputerror.department}} </span>\\n          <br>\\n          <div>\\n\\n            <span class=\\\"pt-2\\\"><b>{{'Date Of Joining' | translate }}</b>\\n              <span class=\\\"required-field\\\">*</span></span>\\n\\n\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n              </div>\\n              <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [value]=\\\"form.data.dateOfJoining | date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.dateOfJoining=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                required />\\n            </div>\\n          </div>\\n          <span *ngIf=\\\"form.inputerror.dateOfJoining != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n            {{form.inputerror.dateOfJoining}} </span>\\n\\n          <br>\\n          <div class=\\\"form-group\\\">\\n            <label><b>{{ 'LastEmployerName' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user\\\"></i></div>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"lastEmployerName\\\" [(ngModel)]=\\\"form.data.lastEmployerName\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{ 'Enter LastEmployerName' | translate }}\\\">\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.lastEmployerName!=null\\\"\\n              class=\\\"alertRedColor\\\">{{form.inputerror.lastEmployerName}}</span>\\n          </div>\\n          <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                }}</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                }}</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/employeelist']\\\">{{ 'List' | translate }}</a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent  extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.EMPLOYEE, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Rahul----------.\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.priorityId);\n    flag = flag && validator.isNotNullObject(form.dateOfJoining);\n    console.log(form.productName);\n    flag = flag && validator.isNotNullObject(form.department);\n    console.log(form.address);\n    flag = flag && validator.isNotNullObject(form.lastEmployerName);\n    console.log(form.phone);\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.title = data.name;\n    form.dateOfJoining=data.dateOfJoining;\n    form.department=data.department;\n    form.lastEmployerName=data.lastEmployerName;\n    console.log(data.title + 'Title');\n\n    form.dateofOpening = data.dateofOpening;\n    form.experience = data.experience;\n    form.status = data.status;\n\n\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlbGlzdC9lbXBsb3llZWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/62.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Employee List' | translate }}</h1>\\n      </div>\\n\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfJoining\\\"\\n            placeholder=\\\"{{'Search Date Of Joining' | translate}}\\\">\\n        </div>\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastEmployerName\\\"\\n            placeholder=\\\"{{ 'Search Last Employer Name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'lastEmployerName')\\\">\\n          <div *ngIf=\\\"!isValidLastEmployerNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"department\\\" [(ngModel)]=\\\"form.searchParams.department\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Department' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.empList\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/employee')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Employee' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'NAME' | translate}}</th>\\n              <th>{{'DATE OF JOINING' | translate}}</th>\\n              <th>{{'DEPARTMENT' | translate}}</th>\\n              <th>{{'LAST EMPLOYER NAME' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n          <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" \\n             value=\\\"{{isMasterSel}}\\\"/></td>\\n\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.dateOfJoining | date : 'dd-MM-yyyy' }}</td>\\n              <td>{{ m.department }}</td>\\n              <td>{{ m.lastEmployerName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/employee/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/employeelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer> \"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-employeelist',\n  templateUrl: './employeelist.component.html',\n  styleUrls: ['./employeelist.component.css']\n})\nexport class EmployeelistComponent extends BaseListCtl {\n\n  isValidNameInput:boolean=true;\n  isValidLastEmployerNameInput:boolean=true\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.EMPLOYEE, locator, route);\n  }\n\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n   \n  if (field === 'name') {\n    const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n    if (containsNonAlphabetic) {\n      console.log('Please enter letters and spaces only.');\n      this.isValidNameInput = false;\n    } else {\n      this.isValidNameInput = true;\n    }\n  }\n\n  if (field === 'lastEmployerName') {\n    const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n    if (containsNonAlphabetic) {\n      console.log('Please enter letters and spaces only.');\n      this.isValidLastEmployerNameInput = false;\n    } else {\n      this.isValidLastEmployerNameInput = true;\n    }\n  }\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EndpointServiceService {\n\n  constructor() { }\n\n  public SERVER_URL = \"http://localhost:8084\";\n  public MESSAGE = this.SERVER_URL + \"/Message\";\n  public USER = this.SERVER_URL + \"/User\";\n  public ROLE = this.SERVER_URL + \"/Role\";\n  public COLLEGE = this.SERVER_URL + \"/College\";\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\n  public STUDENT = this.SERVER_URL + \"/Student\";\n  public SUBJECT = this.SERVER_URL+ \"/Subject\";\n  public FACULTY = this.SERVER_URL+ \"/Faculty\";\n  public COURSE = this.SERVER_URL + \"/Course\";\n  public TIMETABLE = this.SERVER_URL+ \"/TimeTable\";\n  public JASPERREPORT = this.SERVER_URL+ \"/Jasper\";\n  public ORDER = this.SERVER_URL + \"/Order\";\n  public JOB = this.SERVER_URL + \"/Job\";\n  public EMPLOYEE = this.SERVER_URL + \"/Employee\";\n  public CLIENT = this.SERVER_URL + \"/Client\";\n  public PATIENT = this.SERVER_URL + \"/Patient\";\n  public LEAD = this.SERVER_URL + \"/Lead\";\n  public WISH = this.SERVER_URL + \"/Wish\";\n  public PRES = this.SERVER_URL + \"/Prescription\";\n  public USERS = this.SERVER_URL + \"/Users\";\n  public FOLLOWUP = this.SERVER_URL + \"/FollowUp\";\n  public SUPPLIER = this.SERVER_URL + \"/Supplier\";\n  public SHOPPING = this.SERVER_URL + \"/Shopping\";\n  public ROUTE = this.SERVER_URL + \"/Route\";\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Faculty List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\n            placeholder=\\\"{{'Search College' | translate}}\\\">\\n\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n\\n        \\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/faculty')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Faculty' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      \\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                <th>{{'S.No.' | translate}}</th>\\n                <th>{{'Name' | translate}}</th>\\n                <th>{{'DOB' | translate}}</th>\\n                <th>{{'Gender' | translate}}</th>\\n                <th>{{'College' | translate}}</th>\\n                <th>{{'Course' | translate}}</th>\\n                <th>{{'Subject' | translate}}</th>\\n                <th>{{'Mobile' | translate}}</th>\\n                <th>{{'Email' | translate}}</th>\\n                <th>{{'Qualification' | translate}}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                </td>\\n                <td>{{(form.pageNo*5)+i+ 1}} </td>\\n                <td>{{ m.firstName }} {{m.lastName}} </td>\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}} </td>\\n                <td>{{ m.gender }} </td>\\n                <td>{{m.collegeName}}</td>\\n                <td>{{m.courseName}}</td>\\n                <td>{{m.subjectName}}</td>\\n                <td>{{ m.phoneNo}}</td>\\n                <td>{{m.email}}</td>\\n                <td>{{m.qualification}}</td>\\n                <td>\\n                  <a (click)=\\\"forward( '/faculty/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash  text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/facultylist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n            \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-faculty-list',\n  templateUrl: './faculty-list.component.html',\n  styleUrls: ['./faculty.component.css']\n})\nexport class FacultyListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.FACULTY, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Faculty'\\n            | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\n            Faculty' | translate}}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate}} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Qualification' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"qualification\\\" [(ngModel)]=\\\"form.data.qualification\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Your Qualification' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\n          </div>\\n\\n\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\n            </div>\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                </div>\\n\\n\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile No' | translate}} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                  required />\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/facultylist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' |\\n                translate}}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-faculty',\n  templateUrl: './faculty.component.html',\n  styleUrls: ['./faculty.component.css']\n})\nexport class FacultyComponent extends BaseCtl {\n\n  selected = null;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.FACULTY, locator, route);\n  }\n\n  \n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.firstName);\n    console.log(form.firstName)\n    flag = flag && validator.isNotNullObject(form.lastName);\n    console.log(form.lastName)\n    flag = flag && validator.isNotNullObject(form.email);\n    console.log(form.email)\n    flag = flag && validator.isNotNullObject(form.qualification);\n    console.log(form.qualification)\n    flag = flag && validator.isNotNullObject(form.gender);\n    console.log(form.gender)\n    flag = flag && validator.isNotNullObject(form.phoneNo);\n    console.log(form.phoneNo+\"in validateForm----------------------------\");\n    \n    flag = flag && validator.isNotNullObject(form.courseId);\n    console.log(form.courseId)\n    flag = flag && validator.isNotNullObject(form.collegeId);\n    console.log(form.collegeId)\n    flag = flag && validator.isNotNullObject(form.subjectId);\n    console.log(form.subjectId)\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.subjectId = data.subjectId;\n    console.log(form.subjectId+'subject--');\n    form.collegeId = data.collegeId;\n    form.courseId = data.courseId;\n    console.log(form.courseId+'course ----');\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.email = data.email;\n    form.qualification = data.qualification;\n    form.gender = data.gender;\n    form.dob = data.dob;\n    form.phoneNo = data.phoneNo;\n    console.log(\"phoneno----------------\"+form.phoneNo);\n    \n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container row\\\">\\n\\n    <div class=\\\"col-md-12\\\">\\n\\n        <h1 class=\\\"text-primary pt-4\\\">Upload Image Test Page</h1>\\n\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"container row pl-4\\\">\\n <div class=\\\"form-group\\\">\\n        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n\\n        <input type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUpload()\\\" value=\\\"upload\\\">\\n\\n    </div>\\n\\n</div>\\n\\n<hr />\\n<!--   \\n  <div class=\\\"container row\\\">\\n  \\n      <div class=\\\"col-md-12\\\">\\n  \\n          <div *ngIf=message>{{message}}</div>\\n  \\n      </div>\\n  \\n  </div>\\n  \\n  \\n  <div class=\\\"container row\\\">\\n  \\n      <div class=\\\"col-md-6\\\">\\n\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"image name\\\" [(ngModel)]=\\\"imageName\\\"\\n  \\n              name=\\\"name\\\" />\\n  \\n      </div>\\n  \\n      <div class=\\\"col-md-6\\\">\\n  \\n          <input type=\\\"button\\\" (click)=\\\"getImage()\\\" value=\\\"Get Image\\\">\\n  \\n      </div>\\n  \\n  </div>\\n  \\n  \\n  <div class=\\\"container row\\\">\\n  \\n      <div class=\\\"col-md-12\\\">\\n            <div *ngIf=retrievedImage>\\n  \\n              <img [src]=\\\"retrievedImage\\\">\\n  \\n          </div>\\n  \\n      </div>\\n  \\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-file',\n  templateUrl: './file.component.html',\n  styleUrls: ['./file.component.css']\n})\n\n  export class FileComponent implements OnInit {\n\n    ngOnInit() {}\n\n  \n    fileToUpload: File = null;\n    constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\n\n    handleFileInput(files: FileList) {\n      this.fileToUpload = files.item(0);\n      console.log(this.fileToUpload);\n  }\n\n  onUpload() {\n    this.onSubmit(this.fileToUpload).subscribe(data => {\n      console.log(this.fileToUpload);\n      }, error => {\n        console.log(error);\n      });\n    \n  }\n    \n    \n    onSubmit(fileToUpload: File) {\n      const formData = new FormData();\n\n      formData.append('file', fileToUpload);\n      return this.httpClient.post(\"http://localhost:8080/User/profilePic/1\", formData,);\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd3VwL2ZvbGxvd3VwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add FollowUp' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update FollowUp' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Patient' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"patient\\\" [(ngModel)]=\\\"form.data.patient\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select patient' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Flist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.patient != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.patient}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Doctor' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"doctor\\\" [(ngModel)]=\\\"form.data.doctor\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Doctor' | translate }}</option>\\n                  <option value=\\\"Sachin\\\">Sachin</option>\\n                  <option value=\\\"Naman\\\">Naman</option>\\n                  <option value=\\\"Kalpesh\\\">Kalpesh</option>\\n                  <option value=\\\"Nitesh\\\">Nitesh</option>\\n                  <option value=\\\"Pranav\\\">Pranav</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.doctor != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.doctor}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Visit Date' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"visitDate\\\" [value]=\\\"form.data.visitDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.visitDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.visitDate}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Fees' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"fees\\\" [(ngModel)]=\\\"form.data.fees\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Fees' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.fees}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\"\\n                class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' |\\n                translate}}</button>\\n              <button (click)=\\\"forward('/followuplist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' |\\n                translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n@Component({\n  selector: 'app-followup',\n  templateUrl: './followup.component.html',\n  styleUrls: ['./followup.component.css']\n})\n  export class FollowupComponent extends BaseCtl {\n  \n    constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n      super(locator.endpoints.FOLLOWUP, locator, route);\n    }\n  \n    validateForm(form) {\n      let flag = true;\n      let validator = this.serviceLocator.dataValidator;\n      flag = flag && validator.isNotNullObject(form.patient);\n      flag = flag && validator.isNotNullObject(form.doctor);\n      flag = flag && validator.isNotNullObject(form.visitDate);\n      flag = flag && validator.isNotNullObject(form.fees);\n      \n  \n      return flag;\n    }\n  \n    limitInput(event: any, maxLength: number) {\n      const target = event.target;\n      const value = target.value;\n      if (value.length >= maxLength) {\n        event.preventDefault();\n      } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n        event.preventDefault();\n      }\n    }\n  \n    limitInputw(event: any, maxLength: Text) {\n      const target = event.target;\n      const value = target.value;\n      if (value.length >= maxLength) {\n        event.preventDefault();\n      } else if (!/^[a-zA-Z]*$\\d{0,15}$/.test(value + event.key)) {\n        event.preventDefault();\n      }\n    }\n  \n  \n    populateForm(form, data) {\n      form.id = data.id;\n      form.patient = data.patient;\n      console.log(form.quantity + \" inside populateForm method\");\n  \n      form.doctor = data.doctor;\n      form.visitDate = data.visitDate;\n      form.fees = data.fees;\n      \n  \n      //let ndate = new Date(data.dob);\n  \n      //console.log(form.dob + 'date ------',ndate)\n  \n    }\n    parseDate(dateString: string): Date {\n      if (dateString) {\n        return new Date(dateString);\n      }\n      return null;\n    }\n  \n  }\n  \n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd3VwbGlzdC9mb2xsb3d1cGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .col-sm-2,\\n  .search-inputs .col-sm-1 {\\n    padding: 0 5px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'followup List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.visitDate\\\"\\n            placeholder=\\\"{{'Search dateOfVisit' | translate}}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.fees\\\"\\n            placeholder=\\\"{{'Search Fees' | translate}}\\\" (input)=\\\"validateInput($event, 'fees')\\\">\\n          <div *ngIf=\\\"!isValidFeesInput\\\" class=\\\"text-danger\\\">\\n            Please enter numbers only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"patient\\\" [(ngModel)]=\\\"form.searchParams.patient\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select patient' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Flist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"doctor\\\" [(ngModel)]=\\\"form.searchParams.doctor\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Doctor' | translate }}</option>\\n            <option value=\\\"Sachin\\\">Sachin</option>\\n            <option value=\\\"Naman\\\">Naman</option>\\n            <option value=\\\"Kalpesh\\\">Kalpesh</option>\\n            <option value=\\\"Nitesh\\\">Nitesh</option>\\n            <option value=\\\"Pranav\\\">Pranav</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/followup')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add FollowUp' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Patient' | translate}}</th>\\n              <th>{{'Doctor' | translate}}</th>\\n              <th>{{'visitDate' | translate}}</th>\\n              <th>{{'Fees' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.patient }}</td>\\n              <td>{{ m.doctor }}</td>\\n              <td>{{ m.visitDate | date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.fees }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/followup/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/followuplist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-followuplist',\n  templateUrl: './followuplist.component.html',\n  styleUrls: ['./followuplist.component.css']\n})\nexport class FollowuplistComponent extends BaseListCtl {\n  \n \n  isValidFeesInput:boolean=true;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.FOLLOWUP, locator, route);\n  }\n\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    \n     if (field === 'fees') {\n      this.isValidFeesInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n  }\n}\n\n\n","module.exports = \"footer{\\n    position: fixed;\\n    \\n    bottom: 0px;\\n    height: 40px;\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTs7SUFFZixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlcntcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgXG4gICAgYm90dG9tOiAwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","module.exports = \"<footer class=\\\"text-center \\\"\\n style=\\\"background: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\\">\\n  <!-- Copyright -->\\n  <div class=\\\"text-center pt-2 pb-2 text-light\\\" >\\n    &copy; {{'COPYRIGHT' | translate}}\\n    <a class=\\\"text-light\\\" href=\\\"\\\">{{'NCS PVT. LTD' | translate}}</a>\\n  </div>\\n  <!-- Copyright -->\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router'\n\n\n@Injectable()\n\nexport class HttpServiceService {\n\n\n\n  form = {\n    message: '',\n    error: false\n  };\n\n\n  userparams = {\n    url: '',\n    sessionExpiredMsg: '',\n    methodType: '',\n  };\n\n\n  constructor(private router: Router, private httpClient: HttpClient) {\n\n  }\n\n  get(endpoint, callback) {\n    return this.httpClient.get(endpoint, { withCredentials: true }).subscribe((data) => {\n      console.log('Data :: ' + data);\n      callback(data);\n\n    }, error => {\n      console.log('ORS Error--', error);\n      if (error.status === 401) {\n        localStorage.clear();\n        this.router.navigate(['/login'], {\n          queryParams: { errorMessage: error.error.error },\n        })\n\n      }\n    });\n  }\n\n  post(endpoint, bean, callback) {\n    return this.httpClient.post(endpoint, bean, { withCredentials: true }).subscribe((data) => {\n      console.log(data);\n      callback(data);\n\n    }, error => {\n      console.log('ORS Error--', error);\n      if (error.status === 401) {\n        localStorage.clear();\n        this.router.navigate(['/login'], {\n          queryParams: { errorMessage: error.error.error },\n        })\n      }\n    }); ``\n  }\n\n\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2ItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/62.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Job List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\"\\n            placeholder=\\\"{{ 'Search Title' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'title')\\\">\\n          <div *ngIf=\\\"!isValidTitleInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateofOpening\\\"\\n            placeholder=\\\"{{'Search Date Of opening' | translate}}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.experience\\\"\\n            placeholder=\\\"{{'Search Experience' | translate}}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.searchParams.status\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Status' | translate }}</option>\\n           \\n            <option value=\\\"Open   \\\">{{'Open' | translate }} </option>\\n            <option value=\\\"Close\\\">{{'Close' | translate }} </option>\\n            <option value=\\\"Hold\\\">{{'Hold' | translate }} </option>>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/job')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Job' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'TITLE' | translate}}</th>\\n              <th>{{'DATE OF OPENING' | translate}}</th>\\n              <th>{{'EXPERIENCE' | translate}}</th>\\n              <th>{{'STATUS' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n          <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" \\n             value=\\\"{{isMasterSel}}\\\"/></td>\\n\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n\\n              <td>{{ m.title }}</td>\\n              <td>{{ m.dateofOpening | date : 'dd-MM-yyyy' }}</td>\\n              <td>{{ m.experience }}</td>\\n              <td>{{ m.status }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/job/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/joblist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer> \"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-job-list',\n  templateUrl: './job-list.component.html',\n  styleUrls: ['./job-list.component.css']\n})\nexport class JobListComponent extends BaseListCtl {\n  isValidTitleInput: boolean = true\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.JOB, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'title') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidTitleInput = false;\n      } else {\n        this.isValidTitleInput = true;\n      }\n    }\n\n  }\n  }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Job' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Job' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div>\\n              <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\n                <span class=\\\"required-field\\\">*</span></span>\\n  \\n  \\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'select Status' | translate }}</option>\\n                  <option value=\\\"Open   \\\">{{'Open' | translate }} </option>\\n                  <option value=\\\"Close\\\">{{'Close' | translate }} </option>\\n                  <option value=\\\"Hold\\\">{{'Hold' | translate }} </option>\\n                </select>\\n              </div>\\n            </div> <span *ngIf=\\\"form.inputerror!=status\\\" class=\\\"alertRedColor\\\">{{form.inputerror.status}}</span>\\n  \\n            <div><br>\\n  \\n              <span class=\\\"pt-2\\\"><b>{{'Date Of Opening' | translate }}</b>\\n                <span class=\\\"required-field\\\">*</span></span>\\n  \\n  \\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateofOpening\\\" [value]=\\\"form.data.dateofOpening | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dateofOpening=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                  required />\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.dateofOpening != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{form.inputerror.dateofOpening}} </span>\\n            <br>\\n  \\n  \\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Experience' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"experience\\\" [(ngModel)]=\\\"form.data.experience\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter EXPERIENCE' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror!=experience\\\" class=\\\"alertRedColor\\\">{{form.inputerror.experience}}</span>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Title' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter Title' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror!=title\\\" class=\\\"alertRedColor\\\">{{form.inputerror.title}}</span>\\n            </div>\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/joblist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent extends BaseCtl {\n;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.JOB, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.title);\n    flag = flag && validator.isNotNullObject(form.dateofOpening);\n    flag = flag && validator.isNotNullObject(form.experience);\n    flag = flag && validator.isNotNullObject(form.status);\n\n\n    return flag;\n  }\n\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.title = data.title;\n    form.dateofOpening = data.dateofOpening;\n    form.experience = data.experience;\n    form.status = data.status;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYWQvbGVhZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Lead' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Lead' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div>\\n              <span class=\\\"pt-2\\\"><b>{{ 'Date' | translate }}</b><span class=\\\"required-field\\\">*</span></span>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.date = parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                  required />\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\n              {{ form.inputerror.date }}\\n            </span>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ ' ContacName' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"ContacName\\\" [(ngModel)]=\\\"form.data.contacName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\n              </div> <span *ngIf=\\\"form.inputerror!=contacName\\\"\\n                class=\\\"alertRedColor\\\">{{form.inputerror.contacName}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ ' Mobile' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"Mobile\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter mobileNo' | translate }}\\\">\\n              </div> <span *ngIf=\\\"form.inputerror!=mobile\\\" class=\\\"alertRedColor\\\">{{form.inputerror.mobile}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\"><b>{{'Status' | translate }}</b>\\n              <label><b>{{ ' Status' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Status' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Llist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{form.inputerror.status}} </span>\\n\\n\\n\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\"\\n                class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' |\\n                translate}}</button>\\n              <button (click)=\\\"forward('/leadlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' |\\n                translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-lead',\n  templateUrl: './lead.component.html',\n  styleUrls: ['./lead.component.css']\n})\n\n\nexport class LeadComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.LEAD, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.date);\n    flag = flag && validator.isNotNullObject(form.contacName);\n    flag = flag && validator.isNotNullObject(form.mobile);\n    flag = flag && validator.isNotNullObject(form.status);\n\n\n    return flag;\n  }\n\n  limitInput(event: any, maxLength: number) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.date = data.date;\n    form.contacName = data.contacName;\n    form.mobile = data.mobile;\n    form.status = data.status;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYWRsaXN0L2xlYWRsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Lead List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\n            placeholder=\\\"{{'Search Date' | translate}}\\\">\\n        </div>\\n     \\n        \\n          <div class=\\\"col-sm-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.contacName\\\"\\n              placeholder=\\\"{{'Search ContacName' | translate}}\\\" (input)=\\\"validateInput($event, 'contacName')\\\">\\n            <div *ngIf=\\\"!isValidContacNameInput\\\" class=\\\"text-danger\\\">\\n              Please enter numbers only.\\n            </div>\\n          </div>\\n          \\n       \\n          <div class=\\\"col-sm-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n              placeholder=\\\"{{ 'Search Mobile No' | translate }}\\\"\\n              pattern=\\\"[a-zA-Z0-9\\\\s]*\\\"\\n              (input)=\\\"validateInput($event, 'mobile')\\\"> \\n            <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">\\n              Please enter letters, numbers, and spaces only.\\n            </div>\\n          </div>\\n          \\n        <div class=\\\"col-sm-2\\\">  \\n          <select class=\\\"form-control\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.searchParams.status\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Status' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Llist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/lead')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Lead' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Date' | translate}}</th>\\n              <th>{{'contacName' | translate}}</th>\\n              <th>{{'mobile' | translate}}</th>\\n              <th>{{'Status' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.date | date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.contacName }}</td>\\n              <td>{{ m.mobile }}</td>\\n              <td>{{ m.status }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/lead/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/leadlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-leadlist',\n  templateUrl: './leadlist.component.html',\n  styleUrls: ['./leadlist.component.css']\n})\nexport class LeadlistComponent extends BaseListCtl {\n\n\n  isValidMobileInput: boolean = true\n  isValidContacNameInput: boolean = true;\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.LEAD, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n    if (field === 'contacName') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidContacNameInput = false;\n      } else {\n        this.isValidContacNameInput = true;\n      }\n    }\n\n\n\n\n\n  }\n  // validAlphabet(event: any, field: string) {\n  //   const values = event.target.value;\n  //   if (field === 'name') {\n  //     this.isValidNameInput = /^[A-Za-z\\s]+$/.test(values);\n  //   }\n  // }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div id=\\\"loader\\\">\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"loading\\\"></div>\\n    </div>\\n\\n    <p class=\\\"spinner-message\\\" *ngIf=\\\"message && message !== ''\\\">\\n      {{message}}\\n    </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<app-navbar ></app-navbar>\\n<style>\\n  .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n  } \\n  \\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n\\n  <div class=\\\"col-sm-4\\\">\\n    \\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form #loginForm=\\\"ngForm\\\">\\n          \\n          <div style=\\\"text-align: center;\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Forgot Password' | translate}}</h1>\\n          </div>\\n\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error == false && form.message == 'Password has been sent to email id'\\\"\\n            class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\n              </div>\\n            </div>\\n          </div>\\n\\n          <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n              <button (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Reset My Password' | translate}}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  \\n</div>\\n  </div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgotpassword.component.html'\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\n  endpoint = \"http://localhost:8084/Auth\";\n\n  form = {\n    error: false,\n    message: \"\",\n    loginId: '',\n  };\n\n  inputerror = {};\n  message = '';\n\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\n  }\n\n\n  validate(){\n    let flag = true;\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\n    return flag;\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n  }\n\n  submit() {\n    var _self = this;\n    this.httpService.get(_self.endpoint + \"/fp/\"+ this.form.loginId ,function (res) {\n\n      console.log('MyResponse', res);\n\n      _self.form.message = '';\n      _self.inputerror = {};\n          console.log(res.result.message+'------>msg');\n      if (res.result.message) {\n        _self.form.message = res.result.message;\n        console.log(_self.form.message+'-------> msg in sucess');\n      \n      }\n\n      _self.form.error = !res.success;\n      console.log(_self.form.error + '-----------> msg in self.form.error in res');\n\n      if (_self.form.error && res.result.inputerror) {\n          _self.inputerror = res.result.inputerror;\n          console.log(_self.inputerror + '-----------> msg in self.form.error');\n      }\n    });\n  }\n}\n","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZDs7O0FBR0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtHQUNUOzs7QUFFQTtJQUNDLFlBQVk7R0FDYjs7O0FBRUE7SUFDQyxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0UmVkQ29sb3Ige1xuICAgIGNvbG9yOiByZWQ7XG59XG5cblxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcbiAgY29udGVudDogXCIqXCI7XHRcdFxuICBjb2xvcjogcmVkO1x0XHRcbiAgIH1cdFxuXG4gICAuc3VjY2Vzc0NvbG9ye1xuICAgIGNvbG9yOiBncmVlbjtcbiAgIH1cblxuICAgLmJ0bi1zcGFjZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbiJdfQ== */\"","module.exports = \"<app-navbar #one></app-navbar>\\n<style>\\n  #nnn{\\n    background: none;\\n    border: none;\\n  }\\n  \\n  </style>\\n  \\n  \\n<style type=\\\"text/css\\\">\\n  .log1 {\\n    padding-top: 13%; \\n  }\\n  \\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n    \\n  }\\n  .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n    \\n  }\\n  </style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 8%; padding-bottom: 8%;\\nbackground: url(assets/files/Login3.jpg) no-repeat center center;\\n   background-attachment: fixed;\\nbackground-size: 225vh;width:auto;\\n  height: 105vh;\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card input-group-addon grad\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div style=\\\"text-align: center;\\\">\\n            <h1 class=\\\"text-primary font-weight-bold\\\">{{'Login' | translate}}</h1>\\n          </div>\\n          <input type=\\\"hidden\\\" name=\\\"log\\n          inUrl\\\" [(ngModel)]=\\\"form.loginUrl\\\" class=\\\"form-control\\\">\\n          <div *ngIf=\\\"form.error && form.message == 'Invalid ID or Password'\\\"\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{'Invalid ID or Password' | translate}}\\n          </div>\\n          <div *ngIf=\\\"form.error==false && form.message == 'Logout Successfully'\\\"\\n            class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{'Log out successfully' | translate}}\\n          </div>\\n\\n          <div *ngIf=\\\"form.message == 'OOPS! Your session has been expired'\\\"\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{'OOPS! Your session has been expired' | translate}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span>\\n            </span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\n              </div>\\n            </div>\\n           <span  *ngIf=\\\"inputerror.loginId != null\\\"\\n          class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'loginId'| translate}} </span> \\n          </div>\\n           <!-- <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>  -->\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text \\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span  *ngIf=\\\"inputerror.password != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span> \\n\\n            <!-- <span class=\\\"alertRedColor\\\">{{inputerror.password}}</span> -->\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n              <button (click)=\\\"signIn()\\\" class=\\\"btn btn-md btn-success\\\">\\n                {{'Sign in' | translate}}</button>\\n            </div>\\n            &nbsp;&nbsp;&nbsp;\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/forgotpassword']\\\">{{'Forgot Password' | translate}}</a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  endpoint = \"http://localhost:8084/Auth\";\n\n  form = {\n    error: false,\n    message: '',\n    loginId: '',\n    password: '',\n    loginUrl: '',\n  };\n\n  inputerror = {};\n  message = '';\n\n  userparams = {\n    url: '',\n    sessionExpiredMsg: '',\n    methodType: '',\n  };\n\n\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router,\n    private cookieService: CookieService, private route: ActivatedRoute, private serviceLocator: ServiceLocatorService) {\n\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n  this.route.queryParams.subscribe((params) =>{\n    this.form.message = params['errorMessage'] || null;\n    console.log(\"mas>>>>>>>>>>>>>>>gg.>>\",this.form.message);\n    })\n    //this.userSessionCheck();\n    if (this.httpService.form.error == true) {\n      this.form.message = this.httpService.form.message;\n      this.form.error = this.httpService.form.error;\n    }\n    var a = '';\n    this.serviceLocator.getPathVariable(this.route, function (params) {\n      a = params[\"userparams\"];\n      console.log('I GOT ID, its logout', a);\n    })\n    if (a == 'true') {\n      this.form.message = 'Logout Successfully';\n    }\n  }\n\n  userSessionCheck() {\n\n    this.route.paramMap.subscribe(params => {\n      //  this.userList = params.get('userparams');    \n      //  this.userparams=JSON.parse(this.route.snapshot.paramMap.get('userparams'));\n\n      this.userparams = JSON.parse(this.route.snapshot.queryParamMap.get('userparams'));\n      if (this.userparams != null) {\n        this.form.message = this.userparams.sessionExpiredMsg;\n        this.form.loginUrl = this.userparams.url;\n        //  console.log('URL-----------------------' + this.userparams.url);\n        //  console.log('Message-----------------------' + this.userparams.sessionExpiredMsg);\n        //  console.log('Method Type-----------------------' + this.userparams.methodType);\n      }\n\n    });\n    if (this.form.message != null) {\n      this.form.error = true;\n    }\n  }\n\n  validate() {\n    let flag = true;\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\n    console.log(this.form.loginId);\n    flag = flag && this.dataValidator.isNotNull(this.form.password);\n    console.log(this.form.password);\n    return flag;\n  }\n\n\n  signIn() {\n\n    var _self = this;\n    this.form.error = false;\n    const requestedUrl = this.httpService.userparams.url;//to get the URI\n    console.log('signIn----', this.form);\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\n\n      console.log('MyResponse', res);\n\n\n      _self.form.message = '';\n      _self.inputerror = {};\n      //_self.form.loginId = res.result.loginId;\n      if (_self.dataValidator.isNotNullObject(res.result.message)) {\n        _self.form.message = res.result.message;\n      }\n\n      _self.form.error = !res.success;\n\n      if (_self.dataValidator.isNotNullObject(res.result.inputerror)) {\n        _self.inputerror = res.result.inputerror;\n      }\n\n      if (_self.dataValidator.isTrue(res.success)) {\n\n    \n        localStorage.setItem(\"loginId\", res.result.loginId);\n  \n       \n        localStorage.setItem(\"role\", res.result.role);\n        localStorage.setItem(\"fname\", res.result.fname);\n        localStorage.setItem(\"lname\", res.result.lname);\n        localStorage.setItem(\"userid\", res.result.data.id);\n      \n        //   console.log(res.result.data.id + 'sessionId set ----');\n        //   console.log(res.result.token + '  Token set ----');\n\n\n        if (requestedUrl != null && requestedUrl != '') {\n          _self.router.navigateByUrl(requestedUrl);\n\n        } else {\n          _self.router.navigateByUrl('dashboard');\n        }\n      }\n    });\n  }\n\n}","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n   .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 25px\\n  ;\\n  }\\n \\n</style>\\n<div class=\\\"row \\\" style=\\\" padding-top: 4%;\\n padding-bottom:0%;background-image: url(../../assets/files/wall.jpg);\\nbackground-attachment: fixed;\\nbackground-size: 100%;\\n  height: 120vh;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n         <form>\\n          <div style=\\\"text-align: center;\\\">\\n            <h3 class=\\\"text-primary font-weight-bold\\\">\\n              {{'Sign Up' | translate}}\\n            </h3>\\n          </div>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null && form.message.length>0\\\"\\n            class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:0.3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.firstName != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'firstname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.firstName}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.lastName != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'lastname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.lastName}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Login id' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"login\\\" [(ngModel)]=\\\"form.data.login\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\n\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.login != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'email'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.login}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.password != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{password | translate}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span  *ngIf=\\\"form.inputerror.phone != null\\\"\\n              class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'phone'| translate}} </span>\\n          </div>\\n\\n          <!-- <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.alternateMobile != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'mobile'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.phone}} </span> \\n          <!-- </div>  -->\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\" class=\\\"form-control\\\">\\n              </div>\\n            </div> <span  *ngIf=\\\"form.inputerror.dob != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'dob'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.dob}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\n                </select>\\n              </div>\\n            </div> <span  *ngIf=\\\"form.inputerror.gender != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'gender'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.gender}} </span> -->\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"pt-2\\\">\\n\\n\\n              <button (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Sign up' | translate}}</button>\\n            </div>\\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n            <div class=\\\"pt-2\\\">\\n\\n              <a class=\\\"btn btn-warning mr-1\\\"[routerLink]=\\\"['/signup']\\\" (click)=\\\"exit()\\\">{{'Reset' | translate}}</a>\\n\\n\\n            </div>\\n          </div>\\n\\n\\n\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport {ServiceLocatorService} from '../service-locator.service';\nimport { format } from 'url';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\n\nexport class SignUpComponent implements OnInit {\n\n\n  endpoint = \"http://localhost:8084/Auth/signUp\";\n\n  public form = {\n\n    error: false, //error \n    message: '', //error or success message\n    data: { id: null }, //form data\n    inputerror: {}, // form input error messages\n    \n  };\n  \n\n  \n\n  constructor(private serviceLocator:ServiceLocatorService, private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\n  }\n  validate() {\n    return this.validateForm(this.form);\n  }\n\n  /**\n   * Override by childs \n   * \n   * @param form \n   */\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n  \n    flag = flag && validator.isNotNullObject(form.firstName);\n    \n    flag = flag && validator.isNotNullObject(form.lastName);\n \n    flag = flag && validator.isNotNullObject(form.loginId);\n    \n    flag = flag && validator.isNotNullObject(form.password);\n    \n    flag = flag && validator.isNotNullObject(form.phone);\n    \n    flag = flag && validator.isNotNullObject(form.gender);\n  \n    flag = flag && validator.isNotNullObject(form.dob);\n    return flag;\n\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n  }\n\n  exit(){ \n   \n    location.reload();\n  }\n\n  reset(){\n    this.router.navigate(['/signup']);\n  }\n\n  submit() {\n    var _self = this;\n    this.httpService.post(this.endpoint, this.form.data,function (res) {\n\n      console.log('MyResponse', res);\n\n      _self.form.message = '';\n      _self.form.inputerror = {};\n\n      if (res.result.message) {\n        _self.form.message = res.result.message;\n      }\n\n      _self.form.error = !res.success;\n      if (_self.form.error && res.result.inputerror) {\n    \n        _self.form.inputerror = res.result.inputerror;\n\n          \n      }\n\n    });\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div  style=\\\"\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;\\npadding-top: 5%;\\npadding-bottom: 24%;\\nwidth:100%;\\n  height: 100;\\\">\\n  <form name=\\\"rollForm\\\" (ngSubmit)=\\\"go()\\\">\\n    <div align=\\\"center\\\">\\n      <div style=\\\"font-size: 80px;\\\">\\n      <p class=\\\"font-weight-bold text-primary\\\">{{'Get Marksheet' | translate }}</p>\\n    </div>\\n    </div>\\n    <div class=\\\"row pt-4 pb-4\\\">\\n      <div class=\\\"col-sm-4 \\\"></div>\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\n        <input type=\\\"text\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.data.rollNo\\\"\\n          placeholder=\\\"{{'Enter Roll Number' | translate }}\\\">&emsp;</div>\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n          {{'Search' | translate }}</button>\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/getmarksheet']\\\"> {{'Reset' | translate}} </a>\\n        \\n        &emsp;\\n\\n      </div>\\n      <div class=\\\"col-md-3 col-sm-3 col-xs-3\\\"></div>\\n\\n    </div>\\n  </form>\\n  <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n    {{form.message}}\\n  </div>\\n  <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n    {{form.message}}\\n  </div>\\n\\n  <div class=\\\"container\\\" *ngIf=\\\"form.list.rollNo!= null\\\" >\\n\\n    <table width=\\\"100%\\\" class=\\\"table table-bordered table-striped table-hover\\\" border=\\\"3px\\\">\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'RollNO' | translate }}</th>\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.rollNo}}</td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Name' | translate }}</th>\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.name}}</td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Marks' | translate }}</th>\\n        <th align=\\\"center\\\" id=\\\"po1\\\">{{'Max Marks' | translate }}</th>\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Min Marks' | translate }}</th>\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Marks Obtain' | translate }}</th>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Subject' | translate }}</th>\\n        \\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Physics' | translate }}</th>\\n        <td align=\\\"center\\\">100</td>\\n        <td align=\\\"center\\\">35</td>\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.physics}}*</span> -->\\n          <span [ngStyle]=\\\"{'color': (form.list.physics >35) ? 'green': 'red' }\\\">{{form.list.physics}}</span>\\n          \\n        </td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Chemistry' | translate }}</th>\\n        <td align=\\\"center\\\">100</td>\\n        <td align=\\\"center\\\">35</td>\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.chemistry}}*</span>  -->\\n          <span [ngStyle]=\\\"{'color': (form.list.chemistry >35) ? 'green': 'red' }\\\">{{form.list.chemistry}}</span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Maths' | translate }}</th>\\n        <td align=\\\"center\\\">100</td>\\n        <td align=\\\"center\\\">35</td>\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.maths}}*</span> -->\\n          <span [ngStyle]=\\\"{'color': (form.list.maths >35) ? 'green': 'red' }\\\">{{form.list.maths}}</span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Total' | translate }}</th>\\n\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">{{form.list.maths+form.list.physics+form.list.chemistry}}</td>\\n      </tr>\\n      <tr>\\n\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Percentage' | translate }}</th>\\n\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">\\n          {{((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 | number:'2.0-2' }}%\\n        \\n          \\n        \\n        \\n        </td>\\n      </tr>\\n     <!--  <tr>\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\n          <font color=\\\"blue\\\">{{'Grade' | translate }}</font>\\n        </th>\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\n          <font color=\\\"green\\\"><b>{{'PASS' | translate }}</b></font>\\n        </td>\\n      </tr> -->\\n\\n      <!-- <tr>\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>\\n          <font color=\\\"red\\\"><b>F</b></font>\\n        </th>\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\n          <font color=\\\"red\\\"><b>{{'FAIL' | translate }}</b></font>\\n        </td>\\n      </tr> -->\\n      <tr>\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>         \\n        </th>\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\"  *ngIf=\\\"((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 > 35; else elseBlock\\\">\\n\\n          <font color=\\\"green\\\"><b>{{'Pass' | translate }}</b></font>\\n        </td>\\n        <ng-template #elseBlock><td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\" ><font color=\\\"red\\\"><b>{{'Fail' | translate }}</b></font></td></ng-template>\\n      </tr>\\n\\n    </table>\\n    \\n</div><div style=\\\"position: relative; clear: both;\\\">\\n  <app-footer></app-footer>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpServiceService } from \"../http-service.service\";\nimport { BaseCtl } from '../base.component';\nimport { NgForm} from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-getmarksheet',\n  templateUrl: './getmarksheet.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class GetmarksheetComponent extends BaseCtl{\n\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null,rollNo : null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo : 0\n   \n  };\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\n    super(locator.endpoints.Marksheet, locator, route);\n\n  }\n\n\n  \n  validate() {\n    return this.validateForm(this.form.data);\n  }\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.rollNo);\n    return flag;\n  }\n  \n  populateForm(form, data) {\n    form.id = data.id;\n    form.rollNo = data.rollNo;\n  \n  }\n  \n  go(){\n    var _self = this;\n    console.log(\"onClickSubmit\");\n    console.log(this.form.data);\n    console.log(this.form.data.rollNo);\n    \n    \n    this.httpservice.get(\"http://localhost:8084/Marksheet/rollno/\"+this.form.data.rollNo,function (res){\n      \n      if(res.success){\n        _self.form.list = res.result.data;\n        if(_self.form.list.length == 0){\n          _self.form.message = \"No record found\";\n          _self.form.error = true;\n        }\n        console.log(\"List Size\",_self.form.list.length );\n      }else{\n        _self.form.error = false;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n}\n\n\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 8%; \\nbackground: url(assets/files/teahub.png) no-repeat center center;\\nbackground-repeat: no-repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <!-- <div class=\\\"col-sm-6 p-1 text-center\\\"> -->\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Marksheet List' | translate}}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row  pt-4 pb-4 \\\" style=\\\"margin-left:15%\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{'Search Name'| translate}}\\\">\\n        </div>\\n      \\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Roll No' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.marksheetList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search'| translate}}</button>\\n        </div>\\n        &nbsp;&nbsp;&nbsp;\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/marksheet')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Marksheet'| translate}}\\n          </button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No'| translate}}</th>\\n                <th>{{'RollNO'| translate}}</th>\\n                <th>{{'Name'| translate}}</th>\\n                <th>{{'Physics'| translate}}</th>\\n                <th>{{'Chemistry'| translate}}</th>\\n                <th>{{'Maths'| translate}}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <!-- <td> <input type=\\\"checkbox\\\" name=\\\"list_name\\\" value=\\\"{{isMasterSel}}\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"isAllSelected()\\\"/>\\n                  </td> -->\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\n                    value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                \\n\\n                <td> {{ m.rollNo }} </td>\\n                <td> {{ m.name }} </td>\\n                <td> {{ m.physics }} </td>\\n                <td> {{ m.chemistry }} </td>\\n                <td> {{ m.maths }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/marksheet/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n\\n                  <!-- <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <table style=\\\"width: 100%;\\\">\\n          <tr>\\n            <td style=\\\"width: 50%;\\\">\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                }} </button>\\n            </td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\n              [routerLink]=\\\"['/marksheetlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n\\n\\n\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                translate }}</button></td>\\n          </tr>\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n  <app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-marksheet-list',\n  templateUrl: './marksheet-list.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class MarksheetListComponent extends BaseListCtl {\n  imageToShow: any;\n  myKey = \"\";\n\n  \ncreateImageFromBlob(image: Blob) {\n  let reader = new FileReader();\n  reader.addEventListener(\"load\", () => {\n     this.imageToShow = reader.result;\n  \n  }, false);\n\n  if (image) {\n     reader.readAsDataURL(image);\n  }\n}\n\n public form = {\n\n   error: false, //error \n   message: null, //error or success message\n   preload: [], // preload data\n   data: { id: null}, //form data\n   inputerror: {}, // form input error messages\n   searchParams: {}, //search form\n   searchMessage: null, //search result message\n   list: [ ], // search list \n   pageNo: 0\n };\n\n\n selectedFile: File;\n retrievedImage: any;\n base64Data: any;\n retrieveResonse: any;\n message: string;\n imageName: any;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.MARKSHEET, locator, route);\n  }\n\n  getImage(id) {\n    //Make a call to Sprinf Boot to get the Image Bytes.\n    this.form.data.id = id;\n    console.log(this.form.data.id);\n    \n    this.httpClient.get('http://localhost:8084/Marksheet/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\n      this.createImageFromBlob(data);\n      this.myKey= this.form.data.id;\n    }, error => {\n      \n      console.log(error);\n    });\n\n  }\n\n}\n\n\n","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFya3NoZWV0L21hcmtzaGVldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkOzs7QUFHQTtFQUNFLFlBQVk7RUFDWixVQUFVO0dBQ1Q7OztBQUVBO0lBQ0MsWUFBWTtHQUNiOzs7QUFFQTtJQUNDLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcbiAgICBjb2xvcjogcmVkO1xufVxuXG5cbi5yZXF1aXJlZC1maWVsZDo6YWZ0ZXIgeyBcdFx0XG4gIGNvbnRlbnQ6IFwiKlwiO1x0XHRcbiAgY29sb3I6IHJlZDtcdFx0XG4gICB9XHRcblxuICAgLnN1Y2Nlc3NDb2xvcntcbiAgICBjb2xvcjogZ3JlZW47XG4gICB9XG5cbiAgIC5idG4tc3BhY2Uge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Marksheet' | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Marksheet' | translate}}</h2>\\n          \\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Roll No' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"rollNo\\\" [(ngModel)]=\\\"form.data.rollNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Roll No' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.rollNo}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Student' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                \\n\\n                <select class=\\\"form-control\\\" required name=\\\"studentId\\\"\\n                  [(ngModel)]=\\\"form.data.studentId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Student' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.studentList\\\" [value]=\\\"obj.id\\\">{{obj.firstName + ' ' +obj.lastName }}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.studentId}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Physics' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phy\\\" [(ngModel)]=\\\"form.data.physics\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Physics Marks' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.physics}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Chemistry' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"chemistry\\\" [(ngModel)]=\\\"form.data.chemistry\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Chemistry Marks' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.chemistry}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Maths' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\n                </div>\\n                \\n                <input type=\\\"text\\\" name=\\\"math\\\" [(ngModel)]=\\\"form.data.maths\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Maths Marks'| translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.maths}} </span>\\n          </div>\\n         \\n         \\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update'| translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/marksheetlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'Back'| translate}}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HttpServiceService } from '../http-service.service';\nimport { SearchResponse, RecordResponse } from '../response';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n\n@Component({\n  selector: 'app-marksheet',\n  templateUrl: './marksheet.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class MarksheetComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  fileToUpload: File = null;\n  marksheetForm: FormGroup = null;\n  uploadForm: FormGroup;\n \n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute , private httpClient: HttpClient) {\n    super(locator.endpoints.MARKSHEET, locator, route);\n\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n      if (_self.fileToUpload) {\n        console.log('Dheeraj');\n        _self.myFile();\n      }\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Dheeraj----------.\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n  onFileSelect(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n\n  }\n\n  onUpload(marksheetform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  myFile() {\n    console.log(this.form.data.id + 'after super.submit-----');\n    this.onSubmitProfile(this.fileToUpload, this.marksheetForm).subscribe(data => {\n      console.log(this.fileToUpload);\n    }, error => {\n      console.log(error);\n    });\n\n  }\n\n  onSubmitProfile(fileToUpload: File,marksheetform: FormGroup) {\n    const formData = new FormData();\n    let phone = null;\n    formData.append('file', fileToUpload);\n    console.log(this.form.data.id + 'this id number ======');\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\n  }\n\n  validate() { \n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    console.log('Student name :: ' + form.name);\n    flag = flag && validator.isNotNullObject(form.rollNo);\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.physics);\n    flag = flag && validator.isNotNullObject(form.chemistry);\n    flag = flag && validator.isNotNullObject(form.maths);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.studentId =data.studentId;\n    form.rollNo = data.rollNo;\n    form.physics = data.physics;\n    form.chemistry = data.chemistry;\n    form.maths = data.maths;\n    form.imageId = data.imageId;\n    console.log('Populated Form', form);\n  }\n\n}\n\n\n","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n  }\\n  \\n</style>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 1%;padding-bottom: 1%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"col-sm-12 pt-3\\\"> \\n          <h3 class=\\\"text-primary text-center font-weight-bold\\\">{{'Marksheet Merit List' | translate}}</h3>\\n        </div>\\n      </div>\\n\\n       <div style=\\\"margin-left: 87%;\\\" class=\\\"pb-2\\\">\\n\\n        <a href=\\\"http://localhost:8084/Jasper/report\\\" class=\\\"btn btn-lg btn-primary \\\" role=\\\"button\\\"  target=\\\"blank\\\">\\n          <span class=\\\"fa fa-print mr-1\\\"></span>{{'Print' | translate}}</a>\\n      </div> \\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold grad\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n              <th >{{'S.No' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'RollNO' | translate}}  </th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Name' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Physics' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Chemistry' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Maths' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Total' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Percentage(%)' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n          </thead>\\n\\n          <tbody>\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let m of form.list; let i = index\\\" >\\n\\t\\t\\t\\t\\t\\t\\t<td>{{(form.pageNo*5)+i+ 1}} </td>\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.rollNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.physics}}</td>\\n              <td> {{m.chemistry}}</td>\\n              <td> {{m.maths}}</td>\\n              <td>{{m.physics+m.maths+m.chemistry}}</td>\\n              <td>{{((m.physics+m.maths+m.chemistry)*100)/300 | number:'2.0-2' }}%</td>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</tr>\\n          </tbody>\\n          </table>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div><app-footer>\\n  \\n</app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpServiceService } from \"../http-service.service\";\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-marksheetmerit-list',\n  templateUrl: './marksheetmerit-list.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class MarksheetmeritListComponent extends BaseCtl{\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\n    super(locator.endpoints.Marksheet, locator, route);\n\n  }\n  ngOnInit() {\n    this.getMeritList();\n  }\n\n  getMeritList(){\n    var _self = this;\n  \n    this.httpservice.get(\"http://localhost:8084/Marksheet/meritlist\",function (res){\n      \n      if(res.success){\n        _self.form.list = res.result.list;\n        if(_self.form.list.length == 0){\n          _self.form.message = \"No record found\";\n          _self.form.error = true;\n        }\n        console.log(\"List Size\",_self.form.list.length );\n      }else{\n        _self.form.error = false;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n  \n  \n}\n\n\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg); background-repeat: no-repeat, repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"col-sm-6 p-1\\\">\\n          <h4 class=\\\"text-primary font-weight-bold\\\">{{'Message List' | translate}}</h4>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n\\n        <div class=\\\"col-sm-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subject\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.body\\\"\\n            placeholder=\\\"{{'Search Body' | translate}}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate}}</button></div>\\n        <div class=\\\"col=sm-1\\\">\\n          <button (click)=\\\"forward('/message')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Message'| translate}}\\n          </button></div>\\n\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-lg-1\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous'| translate}}\\n          </button>\\n        </div>\\n        <div class=\\\"col-lg-1\\\">\\n          <button (click)=\\\"next()\\\" class=\\\"btn btn-info\\\">{{'Next'| translate}} </button>\\n        </div>\\n        <div class=\\\"col-lg-2\\\">\\n\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th>{{'S.No'| translate}}</th>\\n                <th>{{'Code'| translate}}</th>\\n                <th>{{'Subject' | translate}}</th>\\n                <th>{{'Body'| translate}}</th>\\n                <th>{{'Type'| translate}}</th>\\n                <th>{{'Status'| translate}}</th>\\n                <th>#</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.code }} </td>\\n                <td> {{ m.subject }} </td>\\n                <td> {{ m.body }} </td>\\n                <td> {{ m.type }} </td>\\n                <td> {{ m.status }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/message/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { BaseListCtl } from '../base-list.component';\n\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message.component.css']\n})\n\nexport class MessageListComponent extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.MESSAGE, locator, route);\n  }\n\n}\n","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg);\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Message' | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Message' | translate}} </h2>\\n\\n\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div> -->\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Type' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comment grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"form.data.type\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Type' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.type}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Code' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-commenting grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"code\\\" id=\\\"code\\\" [(ngModel)]=\\\"form.data.code\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option selected=\\\"true\\\">{{'Please select'  | translate }}</option>\\n                  <option value=\\\"U-FP\\\">U-FP </option>\\n                  <option value=\\\"U-REG\\\">U-REG </option>\\n                  <option value=\\\"U-CP\\\">U-CP</option>\\n                </select>\\n\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.code}}</span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comments grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"subject\\\" [(ngModel)]=\\\"form.data.subject\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Subject'| translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Body' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"form.data.body\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Body' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.body}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Status' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'HTML' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"html\\\" [(ngModel)]=\\\"form.data.html\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message HTML' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.html}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate}}</button>\\n            </div>\\n\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/messagelist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\n              </button></div>\\n          </div>\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { BaseCtl } from '../base.component';\n\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\n\nexport class MessageComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.MESSAGE, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.type);\n    flag = flag && validator.isNotNullObject(form.code);\n    flag = flag && validator.isNotNullObject(form.subject);\n    flag = flag && validator.isNotNullObject(form.body);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.code = data.code;\n    form.type = data.type;\n    form.subject = data.subject;\n    form.body = data.body;\n    form.status = data.status;\n    form.html = data.html;\n    console.log('Populated Form', form);\n  }\n}\n","module.exports = \"navbar{\\n    position: fixed;\\n    top: 0px;\\n    height: 40px;\\n    width: 100%;\\n    z-index: 1000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFFBQVE7SUFDUixZQUFZO0lBQ1osV0FBVztJQUNYLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYXZiYXJ7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiAxMDAwO1xufSJdfQ== */\"","module.exports = \"<style type=\\\"text/css\\\">\\n  .raj {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  }\\n\\n  .c1 {\\n    color: rgb(235, 6, 6);\\n  }\\n</style>\\n\\n<div class=\\\"header\\\">\\n  <nav *ngIf=\\\"!isLogin()\\\" class=\\\"navbar navbar-expand-lg raj\\\">\\n    <div class=\\\"logo\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\n        <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\n        <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\n      </a>\\n    </div>\\n    <select #locale (change)='changeLocale(locale.value)' class=\\\"c1\\\">\\n      <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\n\\n      <option value=\\\"en\\\" style=\\\"color: red;\\\">English</option>\\n      <option value=\\\"hi\\\" style=\\\"color: red;\\\">{{'Hindi' | translate }}</option>\\n    </select>\\n\\n\\n    <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\" style=\\\"font-size: 15px;\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\" style=\\\"padding-right: 6.5%;\\\">\\n\\n        <li class=\\\"nav-item dropdown\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['myNav']\\\" id=\\\"navbarDropdown\\\"\\n            role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <font style=\\\"color: white;\\\">{{'Hi,Guest'| translate}}\\n            </font>\\n          </a>\\n\\n          <div class=\\\"dropdown-menu\\\" id=\\\"myNav\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/login']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; &nbsp; {{'Log\\n              in' | translate}}</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/signup']\\\"><i class=\\\" fa fa-users\\\"></i> &nbsp; {{'User\\n              Registration' |\\n              translate}}</a>\\n          </div>\\n        </li>\\n        <li>\\n\\n        </li>\\n      </ul>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n\\n<nav *ngIf=\\\"isLogin()\\\" class=\\\"navbar navbar-expand-lg raj\\\">\\n\\n  <div class=\\\"logo\\\">\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\n      <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\n      <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\n    </a>\\n  </div>\\n  <!-- <strong class=\\\"text-white\\\">NCS Pvt Ltd</strong> -->\\n\\n\\n  <select #locale (click)='changeLocale(locale.value)'>\\n    <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\n    <option value=\\\"en\\\">English</option>\\n    <option value=\\\"hi\\\">{{'Hindi' | translate }}</option>\\n  </select>\\n\\n\\n  <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n    aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n\\n\\n    <div class=\\\"col-sm-2\\\"></div>\\n\\n\\n\\n    <ul class=\\\"nav navbar-nav pl-2 \\\">\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'User' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add User' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'User List' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Marksheet' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheet']\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp; {{'Add Marksheet' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetlist']\\\"><i class=\\\"fa fa-paste\\\"></i>\\n            &nbsp;\\n            {{'Marksheet List' | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetmeritlist']\\\"><i\\n              class=\\\" fa fa-list\\\"></i> &nbsp; {{'Marksheet Merit List' | translate}} </a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/getmarksheet']\\\"><i class=\\\"fa fa-copy\\\"></i> &nbsp; {{'Get Marksheet'\\n            |\\n            translate}}</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Role' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/role']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add Role' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/rolelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Role List' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'College' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/college']\\\"><i class=\\\"fa fa-university\\\"></i> &nbsp; {{'Add College' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/collegelist']\\\"><i class=\\\"fa fa-building\\\"></i>\\n            &nbsp;\\n            {{'College List' | translate}} </a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Course' | translate}}\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/course']\\\"><i class=\\\"fa fa-book\\\"></i> &nbsp; {{'Add Course' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/courselist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp;\\n            {{'Course List'\\n            | translate}} </a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Student' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/student']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Student' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/studentlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Student\\n            List' | translate}}</a>\\n        </div>\\n      </li>\\n\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Faculty' | translate}}\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/faculty']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add Faculty' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/facultylist']\\\"><i class=\\\" fa fa-list\\\"></i> &nbsp;\\n            {{'Faculty\\n            List' | translate}}</a>\\n        </div>\\n      </li>\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'TimeTable' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetable']\\\"><i class=\\\"fa fa-clock-o\\\"></i> &nbsp; {{'Add TimeTable'\\n            | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetablelist']\\\"><i class=\\\"fa fa-list\\\"></i>\\n            &nbsp;\\n            {{'TimeTable List' | translate}}</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n        id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <font style=\\\"color: white;\\\">{{'Route' | translate}}</font>\\n      </a>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/route']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Route' |\\n          translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/routelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n          {{'Route\\n          List' | translate}}</a>\\n      </div>\\n    </li>\\n<!-- \\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Wish' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/wish']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Wish' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/wishlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Wish\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n\\n\\n\\n      <!-- <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Lead' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/lead']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Lead' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/leadlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Lead\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n\\n<!-- \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Patient' | translate}}\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patient']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add Patient' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patientlist']\\\"><i class=\\\" fa fa-list\\\"></i> &nbsp;\\n            {{'Patient\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n<!-- \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Job' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/job']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Job' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/joblist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Job\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n<!-- \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Order' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/order']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Order' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/orderlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Order\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n<!-- \\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'FollowUp' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/followup']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add follow' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/followuplist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'followuplist\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n\\n<!-- \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Prescription' | translate}}\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/prescription']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add\\n            Prescription' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/prescriptionlist']\\\"><i class=\\\" fa fa-list\\\"></i>\\n            &nbsp;\\n            {{'Prescription\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n\\n<!-- \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Employee' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/employee']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Employee' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/employeelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Employee\\n            List' | translate}}</a>\\n        </div>\\n      </li>\\n -->\\n\\n<!--  \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Supplier' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplier']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Supplier' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplierlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Supplier\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n<!-- \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n        id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <font style=\\\"color: white;\\\">{{'User' | translate}}</font>\\n      </a>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/users']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add User' |\\n          translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userslist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n          {{'User\\n          List' | translate}}</a>\\n      </div>\\n    </li> -->\\n\\n\\n<!--     \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Client' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/client']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Client' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/clientlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Client\\n            List' | translate}}</a>\\n        </div>\\n      </li> -->\\n\\n\\n<!--       \\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n        id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <font style=\\\"color: white;\\\">{{'Shopping Cart' | translate}}</font>\\n      </a>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/ShopingCart']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add ShoppingCart' |\\n          translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/ShopingCartlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n          {{'ShoppingCart\\n          List' | translate}}</a>\\n      </div>\\n    </li> -->\\n\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{form.data.fname }} ({{form.data.role}})\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"forward()\\\"><i class=\\\" fa fa-user-md\\\"></i> &nbsp; {{'My Profile' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/changepassword']\\\"><i class=\\\" fa fa-key\\\"></i> &nbsp; {{'Change\\n            Password' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"\\\" (click)=\\\"goToLink()\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp;{{'Java Doc' |\\n            translate}}</a>\\n\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\" fa fa-lock\\\"></i> &nbsp;&nbsp;{{'Log Out' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpServiceService} from '../http-service.service';\nimport { ServiceLocatorService} from '../service-locator.service';\n\nimport {TranslateService} from '@ngx-translate/core';\nimport { HttpClient} from '@angular/common/http'\n\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  loginId: string;\n  userid : string;\n \n  constructor(private translate: TranslateService, private route : ActivatedRoute, private httpService : HttpServiceService,private myservice: HttpClient ,private servicelocator : ServiceLocatorService) { \n\n    console.log('DefaultLang ' + localStorage.getItem(\"locale\"));\n    if(localStorage.getItem(\"locale\")!=null){\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\n    }else{\n      translate.setDefaultLang(\"en\");\n    }\n   \n  }\n\n  changeLocale(locale:string){\n    localStorage.setItem(\"locale\",locale);\n    this.translate.use(localStorage.getItem(\"locale\"));\n     console.log('Locale ' + locale);\n   }\n\n   public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    firstName : null,\n    data: { id: null, fname: null, lname : null, role: null, loginId : null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n  \n  };\n  ngOnInit() {\n    // var _self = this;\n    // this.httpService.get(\"http://localhost:8080/Auth/menu\",function (res){\n      \n    //   if(res.success){\n    //     _self.form.list = res.result.list;\n      \n    //   }else{\n    //     _self.form.error = false;\n    //     _self.form.message = res.result.message;\n    //   }\n    //   console.log('FORM', _self.form);\n    // });\n  }\n\n  forward(){\n    this.userid = localStorage.getItem(\"userid\");\n    console.log('UID---' + this.userid)\n    \n    this.servicelocator.forward(\"/user/\"+this.userid);\n   \n  }\n  isLogin() {\n    let check = localStorage.getItem('fname');\n    if (check != \"null\" && check != null) {\n      this.form.data.fname = localStorage.getItem(\"fname\");\n      this.form.data.lname = localStorage.getItem(\"lname\");\n      this.form.data.loginId = localStorage.getItem(\"loginId\");\n      this.form.data.role = localStorage.getItem(\"role\"); \n\n\n     // console.log('fname is ---->>>' + this.form.data.fname);\n      return true;\n    } else {\n      return false;\n  }\n  }\n  goToLink() {\n    window.open('assets/doc/index.html', '_blank');\n  }\n  logout() {\n    var _self = this;\n\n    console.log('Logout', this.form);\n\n    // let url = this.servicelocator.endpoints.getEndpoint(this.servicelocator.endpoints.AUTH, \"logout\");\n\n    // this.servicelocator.httpService.post(url, this.form, function (res, error) {\n\n    //   if (error) {\n    //     alert(error);\n    //     return;\n    //   }\n    //   _self.loginId = \"null\";\n    //   localStorage.removeItem(\"token\");\n    //   localStorage.removeItem(\"fname\");\n    //   localStorage.removeItem(\"lname\");\n    //   localStorage.removeItem(\"loginId\");\n    //   localStorage.removeItem(\"role\")\n\n\n\n    //   console.log('After logout jsessionid---' +localStorage.getItem(\"JSESSIONID\") + \"  logout Pushpendra Singh Kushwah\");\n    \n\n      \n    //   this.form.message = \"Logout Successfully\";\n    //   console.log(this.form.message);\n    //  _self.servicelocator.router.navigateByUrl('/login/true');\n       _self.httpService.get(\"http://localhost:8084/Auth/logout\",function (res){\n      _self.servicelocator.router.navigateByUrl('/login/true');\n        if(res.success){\n          localStorage.clear();\n          _self.form.message = res.result.message;\n      //     _self.form.list = res.result.data;\n      //     localStorage.removeItem(\"JSESSIONID\");\n      //     _self.servicelocator.router.navigateByUrl('/login');\n      //     if(_self.form.list.length == 0){\n      //       _self.form.message = \"No record found\";\n      //       _self.form.error = true;\n      //     }\n      //     console.log(\"List Size\",_self.form.list.length );\n      //   }else{\n      //     _self.form.error = false;\n      //     _self.form.message = res.result.message;\n      //   }\n      //   console.log('FORM', _self.form);\n      };\n\n    });\n\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL29yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Order' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Order' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Quantity' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Quantity' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.quantity}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Product' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"form.data.product\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Product' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Olist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.product != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.product}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Date' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\n              {{ form.inputerror.date }}\\n            </span>\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Amount' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.data.amount\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter amount' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.amount}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/orderlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.ORDER, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.quantity);\n    flag = flag && validator.isNotNullObject(form.product);\n    flag = flag && validator.isNotNullObject(form.date);\n    flag = flag && validator.isNotNullObject(form.amount);\n\n    return flag;\n  }\n\n  limitInput(event: any, maxLength: number) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.quantity = data.quantity;\n    form.product = data.product;\n    form.date = data.date;\n    form.amount = data.amount;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVybGlzdC9vcmRlcmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .col-sm-2,\\n  .search-inputs .col-sm-1 {\\n    padding: 0 5px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Order List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\n            placeholder=\\\"{{'Search Quantity' | translate}}\\\" (input)=\\\"validateInput($event, 'quantity')\\\">\\n          <div *ngIf=\\\"!isValidQuantityInput\\\" class=\\\"text-danger\\\">\\n            Please enter numbers only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.amount\\\"\\n            placeholder=\\\"{{ 'Search Amount' | translate }}\\\" (input)=\\\"validateInput($event, 'amount')\\\">\\n          <div *ngIf=\\\"!isValidAmountInput\\\" class=\\\"text-danger\\\">\\n            Please enter numbers only.\\n          </div>\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\n            placeholder=\\\"{{'Search Date' | translate}}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"product\\\" [(ngModel)]=\\\"form.searchParams.product\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Product' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Olist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/order')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Order' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Quantity' | translate}}</th>\\n              <th>{{'Product' | translate}}</th>\\n              <th>{{'Date' | translate}}</th>\\n              <th>{{'Amount' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.quantity }}</td>\\n              <td>{{ m.product }}</td>\\n              <td>{{ m.date | date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.amount }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/order/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/orderlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-orderlist',\n  templateUrl: './orderlist.component.html',\n  styleUrls: ['./orderlist.component.css']\n})\nexport class OrderlistComponent extends BaseListCtl {\n\n  isValidQuantityInput: boolean = true; // Initialize isValidQuantityInput to true\n  isValidAmountInput: boolean = true; // Initialize isValidAmountInput to true\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ORDER, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'quantity') {\n      this.isValidQuantityInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n     else if (field === 'amount') {\n      this.isValidAmountInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQvcGF0aWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, #001a33(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .log1 {\\n    padding-top: 13%;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n</style>\\n\\n<div class=\\\"row\\\" style=\\\"\\n  padding: 2% 0;\\n  background: url('assets/files/1027.jpg') no-repeat center center;\\n  background-attachment: fixed;\\n  background-size: cover;\\n  width: 100%;\\n  height: auto;\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body input-group-addon grad\\\">\\n        <form name=\\\"userForm\\\">\\n          <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Patient' | translate }}\\n          </h2>\\n          <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Patient' | translate }}\\n          </h2>\\n\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n\\n          <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label><b>{{ ' Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\n            </div> <span *ngIf=\\\"form.inputerror!=name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label><b>{{ ' Mobile' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"Mobile\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{ 'Enter mobileNo' | translate }}\\\">\\n            </div> <span *ngIf=\\\"form.inputerror!=mobile\\\" class=\\\"alertRedColor\\\">{{form.inputerror.mobile}}</span>\\n          </div>\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{ 'dateOfVisit' | translate }}</b><span class=\\\"required-field\\\">*</span></span>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"date\\\" name=\\\"dateOfVisit\\\" [value]=\\\"form.data.dateOfVisit | date:'yyyy-MM-dd'\\\"\\n                     (input)=\\\"form.data.dateOfVisit = parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\" required />\\n            </div>\\n          </div>\\n          <span *ngIf=\\\"form.inputerror.dateOfVisit != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\n            {{ form.inputerror.dateOfVisit }}\\n          </span>\\n          \\n          \\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Decease' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n          \\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"decease\\\" [(ngModel)]=\\\"form.data.decease\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Decease' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.pList\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.decease != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{form.inputerror.decease}} </span>\\n            \\n        \\n\\n          \\n              \\n          <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                }}</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                }}</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/patientlist']\\\">{{ 'List' | translate }}</a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PATIENT, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Raj----------.\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.priorityId);\n    console.log(form.priorityId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.productName);\n    flag = flag && validator.isNotNullObject(form.address);\n    console.log(form.address);\n    flag = flag && validator.isNotNullObject(form.phone);\n    console.log(form.phone);\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in patientcomponent');\n    form.name = data.name;\n    form.dateOfVisit = data.dateOfVisit;\n    form.mobile = data.mobile;\n    form.decease = data.decease;\n\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnRsaXN0L3BhdGllbnRsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Patient List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n\\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n        \\n     \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search Mobile No' | translate }}\\\"\\n            pattern=\\\"[a-zA-Z0-9\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'mobile')\\\"> \\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters, numbers, and spaces only.\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfVisit\\\"\\n            placeholder=\\\"{{'Search dateOfVisit' | translate}}\\\">\\n        </div>\\n       \\n        <div class=\\\"col-sm-2\\\">  \\n          <select class=\\\"form-control\\\" name=\\\"decease\\\" [(ngModel)]=\\\"form.searchParams.decease\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Decease' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.pList\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/patient')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Decease' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Name' | translate}}</th>\\n              <th>{{'DateOfVisit' | translate}}</th>\\n              <th>{{'mobile' | translate}}</th>\\n              <th>{{'Decease' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.dateOfVisit| date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.mobile }}</td>\\n              <td>{{ m.decease }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/patient/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/deceaselist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-patientlist',\n  templateUrl: './patientlist.component.html',\n  styleUrls: ['./patientlist.component.css']\n})\nexport class PatientlistComponent extends BaseListCtl {\n \n\n\n  isValidMobileInput: boolean = true\n  isValidNameInput: boolean = true;\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PATIENT, locator, route);\n  }\n\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n    if (field === 'name') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidNameInput = false;\n      } else {\n        this.isValidNameInput = true;\n      }\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXNjcmlwdGlvbi9wcmVzY3JpcHRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add prescription' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update prescription' | translate}}\\n            </h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Name' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter name' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Decease' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></span>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"decease\\\" [(ngModel)]=\\\"form.data.decease\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{'Select decease' | translate}}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Plist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.decease\\\" class=\\\"alertRedColor\\\">{{'decease' | translate}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Date' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"Date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n              </div>\\n             <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\n            {{ form.inputerror.date }}\\n          </span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Capacity' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calculator Amount grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"capacity\\\" [(ngModel)]=\\\"form.data.capacity\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Amount' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.capacity}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\"\\n                class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' |\\n                translate}}</button>\\n              <button (click)=\\\"forward('/prescriptionlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' |\\n                translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-prescription',\n  templateUrl: './prescription.component.html',\n  styleUrls: ['./prescription.component.css']\n})\nexport class PrescriptionComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PRES, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.decease);\n    flag = flag && validator.isNotNullObject(form.date);\n    flag = flag && validator.isNotNullObject(form.capacity);\n\n\n    return flag;\n  }\n\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.decease = data.decease;\n    form.date = data.date;\n    form.capacity = data.capacity;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXNjcmlwdGlvbmxpc3QvcHJlc2NyaXB0aW9ubGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\"\\n     style=\\\"background: url(assets/files/wall.jpg) no-repeat center center;\\n            background-attachment: fixed;\\n            background-size: cover;\\n            width: auto;\\n            height: 105vh;\\\">\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Prescription List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n                 placeholder=\\\"{{ 'Search Name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n                 (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\n                 placeholder=\\\"{{ 'Search date' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.capacity\\\"\\n                 placeholder=\\\"{{ 'Search Capacity' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n                 (input)=\\\"validateInput($event, 'capacity')\\\">\\n          <div *ngIf=\\\"!isValidCapacityInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select decease' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Plist\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/prescription')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{ 'Add prescription' |\\n                                                                                             translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n            <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th>\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                       (change)=\\\"checkUncheckAll($event)\\\" />\\n              </th>\\n              <th>{{ 'S.No' | translate }}</th>\\n              <th>{{ 'Name' | translate }}</th>\\n              <th>{{ 'Decease' | translate }}</th>\\n              <th>{{ 'Capacity' | translate }}</th>\\n              <th>{{ 'Date' | translate }}</th>\\n              <th>{{ 'Edit' | translate }}</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td>\\n                <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" [disabled]=\\\"m.roleName=='Admin'\\\"\\n                       name=\\\"list_name\\\" id=\\\"{{ m.id }}\\\" value=\\\"{{ isMasterSel }}\\\" />\\n              </td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.decease }}</td>\\n              <td>{{ m.capacity }}</td>\\n              <td>{{ m.date | date : 'dd-MM-yyyy' }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" [disabled]=\\\"m.roleName=='Admin'\\\"\\n                        (click)=\\\"forward('/prescription/' + m.id)\\\" style=\\\"cursor: pointer;\\\"></button>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n                <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' |\\n                                                                                                   translate }}</button>\\n              </td>\\n              <td *ngIf=\\\"form.list.length != 0\\\" style=\\\"width: 50%;\\\"></td>\\n              <td *ngIf=\\\"form.list.length == 0\\\" style=\\\"width: 50%;\\\">\\n                <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/prescriptionlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n                                                                                                           translate }}</a>\\n              </td>\\n              <td>\\n                <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{ 'Next' |\\n                                                                                                          translate }}</button>\\n              </td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-prescriptionlist',\n  templateUrl: './prescriptionlist.component.html',\n  styleUrls: ['./prescriptionlist.component.css']\n})\nexport class PrescriptionlistComponent extends BaseListCtl {\n  isValidCapacityInput:boolean=true\n  isValidNameInput:boolean=true\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PRES, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'name') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidNameInput = false;\n      } else {\n        this.isValidNameInput = true;\n      }\n    }\n    if (field === 'capacity') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidCapacityInput = false;\n      } else {\n        this.isValidCapacityInput = true;\n      }\n    }\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\n background: url(assets/files/back1.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\" >\\n    <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"panel panel-primary\\\">\\n            <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n                \\n                <div class=\\\"text-center\\\">\\n                    <h1 class=\\\"text-primary font-weight-bold\\\">{{'Role List' | translate}}</h1>\\n                  </div>\\n                </div>\\n          \\n                <div class=\\\"row p-1\\\">\\n                  <div class=\\\"col-sm-1\\\"></div>\\n                  <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n                      placeholder=\\\"{{'Search Name' | translate}}\\\">\\n          \\n                  </div>\\n                  <!-- <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n                  </div> -->\\n                  <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n                      placeholder=\\\"{{'Search Description' | translate}}\\\">\\n          \\n                  </div>\\n\\n                  <div class=\\\"col-sm-2\\\">\\n\\n                    <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n                      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\n                      <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                    </select>\\n                  </div>\\n          \\n                  \\n                 \\n                  <div class=\\\"col-sm-1 ml-3\\\">\\n                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n                      {{'Search' | translate }}</button>\\n                  </div>\\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n                  <div class=\\\"col-lg-2 ml-4\\\">\\n                    <button (click)=\\\"forward('/role')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Role' | translate}}\\n                    </button>\\n                  </div>\\n          \\n                  <div class=\\\"col-sm-1\\\">\\n                    <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n                      {{'Delete'| translate}}</button>\\n                  </div>\\n                </div>\\n            <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n                {{form.message}}\\n              </div>\\n              <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n                {{form.message}}\\n              </div>\\n\\n          \\n\\n            <div class=\\\"p-1\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\n                        <thead class=\\\"thead-light text-uppercase\\\">\\n                            <tr>\\n                                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                                <th>{{'S.No' | translate }}</th>\\n                                <th>{{'Name' | translate }}</th>\\n                                <th>{{'Description' | translate }}</th>\\n                                <th>{{'Edit' | translate}}</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                                </td>\\n                                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                                <td> {{ m.name }} </td>\\n                                <td> {{ m.description }} </td>\\n                                <td>\\n                                    <a (click)=\\\"forward( '/role/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                                        <i class=\\\"fa fa-edit text-info\\\"></i>\\n                                    </a>\\n                                    <!-- /\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                                    </a> -->\\n                                </td>\\n                                \\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div><table style=\\\"width: 100%;\\\">\\n                    <tr>\\n                      <td style=\\\"width: 50%;\\\">\\n                  <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                    }} </button></td>\\n                    <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n                    <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\n                      <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/rolelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n        \\n          \\n          \\n                \\n                    <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                      translate }}</button></td>\\n                    </tr>\\n                    </table>\\n              \\n                    \\n               \\n            </div>\\n\\n        </div>\\n\\n    </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-role-list',\n    templateUrl: './role-list.component.html',\n    styleUrls: ['./role.component.css']\n  })\n\n\n  export class RoleListComponent extends BaseListCtl {\n    constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n      super(locator.endpoints.ROLE, locator, route);\n    }\n  \n  }","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS9yb2xlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9yb2xlL3JvbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcbiAgICBjb2xvcjogcmVkO1xufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\n        rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Role' |\\n            translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Role' |\\n            translate }}</h2>\\n\\n\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div> -->\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Role Name' | translate }}\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\n                </div>\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/rolelist')\\\" class=\\\"btn btn-md btn-warning\\\">\\n                {{'List' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\n\nexport class RoleComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.ROLE, locator, route);\n  }\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.description);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.description = data.description;\n    form.status = data.status;\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Route' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Route' | translate}}</h2>\\n\\n            \\n <!-- Success and Error Messages -->\\n <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n  {{ form.message }}\\n</div>\\n\\n<div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n  {{ form.message }}\\n</div>\\n\\n<!-- Route Name Input -->\\n<div class=\\\"form-group\\\">\\n  <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n  <div class=\\\"input-group\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i></div>\\n    </div>\\n    <input type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\n  </div>\\n  <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\n</div>\\n\\n<!-- Route Start Date Input -->\\n<div class=\\\"form-group\\\">\\n  <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n  <div class=\\\"input-group\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i></div>\\n    </div>\\n    <input type=\\\"date\\\" name=\\\"StartDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\"\\n      (input)=\\\"form.data.startDate = parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n  </div>\\n  <span *ngIf=\\\"form.inputerror.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\n</div>\\n\\n<!-- Allow Speed Checkbox -->\\n\\n\\n\\n<div class=\\\"form-group\\\">\\n  <label><b>{{ 'Allow Speed' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n  <div class=\\\"input-group\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-car grey-text\\\"></i></div>\\n    </div>\\n    <input type=\\\"text\\\" name=\\\"allowSpeed\\\" [(ngModel)]=\\\"form.data.allowSpeed\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"{{ 'Enter allow Speed' | translate }}\\\">\\n  </div>\\n  <span *ngIf=\\\"form.inputerror.allowSpeed\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.allowSpeed }}</span>\\n</div>\\n\\n<div class=\\\"form-group\\\">\\n  <label><b>{{ 'Vehicle ID' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n\\n  <div class=\\\"input-group\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n    </div>\\n    <select class=\\\"form-control\\\" name=\\\"decease\\\" [(ngModel)]=\\\"form.data.vehicleId\\\"\\n      aria-label=\\\"ngSelected\\\">\\n      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select vehicleId' | translate }}</option>\\n      <option *ngFor=\\\"let obj of form.preload.Rlist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n    </select>\\n  </div>\\n</div>\\n<span *ngIf=\\\"form.inputerror.vehicleId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n  {{form.inputerror.vehicleId}} </span>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/routelist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-route',\n  templateUrl: './route.component.html',\n  styleUrls: ['./route.component.css']\n})\nexport class RouteComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ROUTE, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Route Component Submit----------\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------Route Component Submit1\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.startDate);\n    console.log(form.startDate);\n    flag = flag && validator.isNotNullObject(form.allowSpeed);\n    console.log(form.allowSpeed);\n    flag = flag && validator.isNotNullObject(form.vehicleId);\n    console.log(form.vehicleId);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in RouteComponent');\n    form.name = data.name;\n    form.startDate = data.startDate;\n    form.allowSpeed = data.allowSpeed;\n    form.vehicleId = data.vehicleId;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n  test() {\n    // Optional method for testing or future functionality\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlbGlzdC9yb3V0ZWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .col-sm-2,\\n  .search-inputs .col-sm-1 {\\n    padding: 0 5px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'Route List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n          \\n        \\n      \\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\"\\n            placeholder=\\\"{{'Search start Date' | translate}}\\\">\\n        </div>\\n       \\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.allowSpeed\\\"\\n            placeholder=\\\"{{ 'Search allowSpeed' | translate }}\\\"\\n            pattern=\\\"[a-zA-Z0-9\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'paymentTerm')\\\"> \\n          <div *ngIf=\\\"!isValidPaymentTermInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters, numbers, and spaces only.\\n          </div>\\n        </div>\\n        \\n\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.searchParams.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select vehicleId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Rlist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/route')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Rote' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Name' | translate}}</th>\\n              <th>{{'StartDate' | translate}}</th>\\n              <th>{{'Allow Speed' | translate}}</th>\\n              <th>{{' Vehicle ID' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.startDate | date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.allowSpeed }}</td>\\n              <td>{{ m.vehicleId }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/route/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/routelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-routelist',\n  templateUrl: './routelist.component.html',\n  styleUrls: ['./routelist.component.css']\n})\nexport class RoutelistComponent extends BaseListCtl {\n  \n  isValidNameInput: boolean = true;\n  isValidPaymentTermInput:boolean=true\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ROUTE, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'paymentTerm') {\n      this.isValidPaymentTermInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }  \n    if (field === 'name') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidNameInput = false;\n      } else {\n        this.isValidNameInput = true;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpServiceService } from './http-service.service';\nimport { DataValidator } from './utility/data-validator';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EndpointServiceService } from './endpoint-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServiceLocatorService {\n\n  \n  httpService = null;\n  dataValidator = null;\n  router = null;\n  endpoints = null;\n\n  constructor(private hs: HttpServiceService, private dv: DataValidator, private r: Router, private ep: EndpointServiceService) {\n    this.httpService = hs;\n    this.dataValidator = dv;\n    this.router = r;\n    this.endpoints = ep;\n  }\n \n  /**\n   * get path variable from url\n   * \n   * @param route \n   * @param callback \n   */\n  getPathVariable(route: ActivatedRoute, callback) {\n    route.params.subscribe(params => {\n      callback(params)\n    });\n  }\n\n  /**\n   * Forward to page \n   * \n   * @param page \n   */\n  forward(page){\n    this.router.navigateByUrl(page);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3BpbmctY2FydC9zaG9waW5nLWNhcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add ShopingCart' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update ShopingCart' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Name' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Name' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Quantity' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Quantity' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.quantity}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Product' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"form.data.product\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Product' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Slist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.product != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.product}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Date' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\n              {{ form.inputerror.date }}\\n            </span>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/ShopingCartlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-shoping-cart',\n  templateUrl: './shoping-cart.component.html',\n  styleUrls: ['./shoping-cart.component.css']\n})\nexport class ShopingCartComponent  extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.SHOPPING, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.quantity);\n    flag = flag && validator.isNotNullObject(form.product);\n    flag = flag && validator.isNotNullObject(form.date);\n    flag = flag && validator.isNotNullObject(form.name);\n\n    return flag;\n  }\n\n  limitInput(event: any, maxLength: number) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.quantity = data.quantity;\n    form.product = data.product;\n    form.date = data.date;\n    form.name = data.name;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3BpbmctY2FydGxpc3Qvc2hvcGluZy1jYXJ0bGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .col-sm-2,\\n  .search-inputs .col-sm-1 {\\n    padding: 0 5px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'ShoppingCart List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\n            placeholder=\\\"{{'Search Quantity' | translate}}\\\" (input)=\\\"validateInput($event, 'quantity')\\\">\\n          <div *ngIf=\\\"!isValidQuantityInput\\\" class=\\\"text-danger\\\">\\n            Please enter numbers only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter numbers only.\\n          </div>\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\n            placeholder=\\\"{{'Search Date' | translate}}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"product\\\" [(ngModel)]=\\\"form.searchParams.product\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Product' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Slist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/ShopingCart')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add ShopingCart' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Name' | translate}}</th>\\n              <th>{{'Quantity' | translate}}</th>\\n              <th>{{'Product' | translate}}</th>\\n              <th>{{'Date' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.quantity }}</td>\\n              <td>{{ m.product }}</td>\\n              <td>{{ m.date | date:'dd-MM-yyyy' }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/ShopingCart/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/ShopingCartlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-shoping-cartlist',\n  templateUrl: './shoping-cartlist.component.html',\n  styleUrls: ['./shoping-cartlist.component.css']\n})\nexport class ShopingCartlistComponent extends BaseListCtl {\n\n  isValidQuantityInput: boolean = true; // Initialize isValidQuantityInput to true\n  isValidNameInput: boolean = true; // Initialize isValidAmountInput to true\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.SHOPPING, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'quantity') {\n      this.isValidQuantityInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n     else if (field === 'name') {\n      this.isValidNameInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  spinner works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n\\n        <div class=\\\"text-center\\\">\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'Student List' | translate }}</h2>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.enrolNo\\\"\\n            placeholder=\\\"{{'Search Enrollment' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\n            placeholder=\\\"{{'Search College' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.email\\\"\\n            placeholder=\\\"{{'Search Email' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNo\\\"\\n            placeholder=\\\"{{'Search Mobile Number' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-lg-2\\\">\\n          <button (click)=\\\"forward('/student')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Student' | translate }}\\n          </button>\\n        </div>\\n\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr align=\\\"center\\\">\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No' | translate }}</th>\\n                <th>{{'Enrollment No' | translate }}</th>\\n                <th>{{'First Name' | translate }}</th>\\n                <th>{{'Last Name' | translate }}</th>\\n                <th>{{'College' | translate }}</th>\\n                <th>{{'DOB' | translate }}</th>\\n                <th>{{'Mobile' | translate }}</th>\\n                <th>{{'Email' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td>{{m.enrolNo}}</td>\\n                <td> {{ m.firstName }} </td>\\n                <td> {{ m.lastName }} </td>\\n                <td> {{ m.collegeName }} </td>\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}}</td>\\n                <td> {{ m.phoneNo }} </td>\\n                <td> {{ m.email }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/student/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n              <tr> <td style=\\\"width: 50%;\\\"><button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' |\\n                    translate }} </button>\\n                </td>  \\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/studentlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n                <td>\\n                  <button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }} </button>\\n                 </td>\\n                </tr>\\n              </table>\\n          \\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student.component.css']\n})\n\nexport class StudentListComponent extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.STUDENT, locator, route);\n  }\n\n\n\n}","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; \\npadding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Student' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Student' | translate }}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Enrollment No' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"enrolNo\\\" [(ngModel)]=\\\"form.data.enrolNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Enrollment Number' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.enrolNo}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"firstN\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastN\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate }} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                </div>\\n\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select College' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.collegeId}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate }} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Email Id' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\n          </div>\\n          \\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\n                class=\\\"form-control form-control-sm\\\" required />\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"  ><b>{{'Mobile No' | translate }} </b>\\n              <span class=\\\"required-field\\\" ></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" maxlength=\\\"10\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/studentlist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent extends BaseCtl {\n  selected = null;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.STUDENT, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.firstName);\n    flag = flag && validator.isNotNullObject(form.lastName);\n    flag = flag && validator.isNotNullObject(form.enrolNo);\n    flag = flag && validator.isNotNullObject(form.phoneNo);\n    flag = flag && validator.isNotNullObject(form.email);\n    flag = flag && validator.isNotNullObject(form.dob);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.collegeId = data.collegeId;\n    console.log(form.collegeId + \" inside populateForm method\");\n\n    form.email = data.email;\n    form.enrolNo = data.enrolNo;\n    form.dob = data.dob;\n\n    //let ndate = new Date(data.dob);\n   \n    //console.log(form.dob + 'date ------',ndate)\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.phoneNo = data.phoneNo;\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Subject List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/subject')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Subject' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n      \\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                <th>{{'S.No.' | translate}}</th>\\n                <th>{{'Name' | translate}}</th>\\n                <th>{{'Course' | translate}}</th>\\n               \\n                <th>{{'Description' | translate}}</th>\\n                <th>{{'Edit' | translate }}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.subjectName}} </td>\\n                <td> {{ m.courseName}} </td>\\n               \\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/subject/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n                \\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/subjectlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n                \\n            \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.SUBJECT, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:13%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Subject' | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Subject' | translate}}</h2>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"subjectName\\\" [(ngModel)]=\\\"form.data.subjectName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Subject Name' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                </div>\\n                <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate}}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/subjectlist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\n              </button></div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpServiceService } from '../http-service.service';\nimport { SearchResponse, RecordResponse } from '../response';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.SUBJECT, locator, route);\n\n  }\n\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.subjectName);\n    flag = flag && validator.isNotNullObject(form.description);\n    flag = flag && validator.isNotNullObject(form.courseId);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.subjectName = data.subjectName;\n    form.description = data.description;\n    form.courseId = data.courseId;\n    console.log('Populated Form', form);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBsaWVyL3N1cHBsaWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Supplier' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Supplier' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Name' | translate}}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"form.data.category\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Category' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Slist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.category != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.category}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Registration Date' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"registrationDate\\\" [value]=\\\"form.data.registrationDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.registrationDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.registrationDate}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Payment Term' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"paymentTerm\\\" [(ngModel)]=\\\"form.data.paymentTerm\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Payment Term' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.paymentTerm}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\"\\n                class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' |\\n                translate}}</button>\\n              <button (click)=\\\"forward('/supplierlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' |\\n                translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-supplier',\n  templateUrl: './supplier.component.html',\n  styleUrls: ['./supplier.component.css']\n})\nexport class SupplierComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.SUPPLIER, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.category);\n    flag = flag && validator.isNotNullObject(form.registrationDate);\n    flag = flag && validator.isNotNullObject(form.paymentTerm);\n\n    return flag;\n  }\n\n  limitInput(event: any, maxLength: number) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  limitInputw(event: any, maxLength: Text) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^[a-zA-Z]*$\\d{0,15}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    console.log(form.name + \" inside populateForm method\");\n\n    form.category = data.category;\n    form.registrationDate = data.registrationDate;\n    form.paymentTerm = data.paymentTerm;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBsaWVybGlzdC9zdXBwbGllcmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .col-sm-2,\\n  .search-inputs .col-sm-1 {\\n    padding: 0 5px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{'supplier List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n          \\n        \\n      \\n\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.registrationDate\\\"\\n            placeholder=\\\"{{'Search Registration Date' | translate}}\\\">\\n        </div>\\n       \\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.paymentTerm\\\"\\n            placeholder=\\\"{{ 'Search paymentTerm' | translate }}\\\"\\n            pattern=\\\"[a-zA-Z0-9\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'paymentTerm')\\\"> \\n          <div *ngIf=\\\"!isValidPaymentTermInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters, numbers, and spaces only.\\n          </div>\\n        </div>\\n        \\n\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"form.searchParams.category\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Category' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Slist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/supplier')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Supplier' |\\n            translate}}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{'Delete' | translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{'S.No' | translate}}</th>\\n              <th>{{'Name' | translate}}</th>\\n              <th>{{'Category' | translate}}</th>\\n              <th>{{'Registration Date' | translate}}</th>\\n              <th>{{'Payment Term' | translate}}</th>\\n              <th>{{'Edit' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{(form.pageNo * 5) + i + 1}}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.category }}</td>\\n              <td>{{ m.registrationDate | date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.paymentTerm }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/supplier/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' | translate }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/supplierlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-supplierlist',\n  templateUrl: './supplierlist.component.html',\n  styleUrls: ['./supplierlist.component.css']\n})\nexport class SupplierlistComponent extends BaseListCtl {\n  myKey = \"\";\n\n  public form = {\n    error: false, // error\n    message: null, // error or success message\n    preload: [], // preload data\n    data: { id: null }, // form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, // search form\n    searchMessage: null, // search result message\n    list: [], // search list\n    pageNo: 0\n  };\n\n  base64Data: any;\n  retrieveResonse: any;\n  message: string;\n  isValidPaymentTermInput: boolean = true; // Property to track validity of paymentTerm input\n  isValidNameInput: boolean = true;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.SUPPLIER, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'paymentTerm') {\n      this.isValidPaymentTermInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }  \n    if (field === 'name') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      if (containsNonAlphabetic) {\n        console.log('Please enter letters and spaces only.');\n        this.isValidNameInput = false;\n      } else {\n        this.isValidNameInput = true;\n      }\n    }\n  \n  \n  \n  \n  \n  }\n  // validAlphabet(event: any, field: string) {\n  //   const values = event.target.value;\n  //   if (field === 'name') {\n  //     this.isValidNameInput = /^[A-Za-z\\s]+$/.test(values);\n  //   }\n  // }\n  \n}","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'TimeTable List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/timetable')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add TimeTable' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n\\n                <th>{{'S.No.' | translate }}</th>\\n                <th>{{'Semester' | translate }}</th>\\n                <th>{{'ExamDate' | translate }}</th>\\n                <th>{{'ExamTime' | translate }}</th>\\n                <th>{{'Course' | translate }}</th>\\n                <th>{{'Subject' | translate }}</th>\\n                <th>{{'Description' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              \\n              <tr *ngFor=\\\"let m of form.list; let i = index;\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.semester }} </td>\\n                <td> {{ m.examDate | date : 'dd-MM-yyyy' }} </td>\\n                <td> {{ m.examTime }} </td>\\n                <td> {{ m.courseName }} </td>\\n                <td> {{ m.subjectName }} </td>\\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/timetable/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                      <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                    </a>\\n                  </td> -->\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/timetablelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n              \\n            \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-timetable-list',\n  templateUrl: './timetable-list.component.html',\n  styleUrls: ['./timetable.component.css']\n})\nexport class TimetableListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.TIMETABLE, locator, route);\n    let ppSize= 0;\n  }\n  \n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add TimeTable' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update TimeTable' | translate }}</h2>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Course' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n          \\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-globe grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Subject' | translate }}</option>\\n            \\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Semester' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"semester\\\" [(ngModel)]=\\\"form.data.semester\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"> {{'Please select' | translate}} </option>\\n                  <option value=\\\"1 Semester\\\">1 Semester</option>\\n                  <option value=\\\"2 Semester\\\">2 Semester</option>\\n                  <option value=\\\"3 Semester\\\">3 Semester</option>\\n                  <option value=\\\"4 Semester\\\">4 Semester</option>\\n                  <option value=\\\"5 Semester\\\">5 Semester</option>\\n                  <option value=\\\"6 Semester\\\">6 Semester</option>\\n                  <option value=\\\"7 Semester\\\">7 Semester</option>\\n                  <option value=\\\"8 Semester\\\">8 Semester</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.semester}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Date' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"examDate\\\" [value]=\\\"form.data.examDate | date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.examDate=parseDate($event.target.value)\\\"\\n                class=\\\"form-control form-control-sm\\\" required />\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examDate}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Time' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"examTime\\\" [(ngModel)]=\\\"form.data.examTime\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select examTime' | translate }}</option>\\n            \\n                  <option selected disabled>{{'Please select' | translate }}</option>\\n                  <option value=\\\"08:00 AM to 11:00 AM\\\">08:00 AM to 11:00 AM</option>\\n                  <option value=\\\"12:00PM to 3:00PM\\\">12:00PM to 3:00PM</option>\\n                  <option value=\\\"3:00PM to 6:00PM\\\">3:00PM to 6:00PM</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examTime}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\n                </div>\\n                <textarea  name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\"  (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button  *ngIf=\\\"form.data.id>0\\\"  (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n              {{'Update' | translate }}</button>\\n            </div>\\n           \\n           \\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/timetablelist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.component.html',\n  styleUrls: ['./timetable.component.css']\n})\n\n\nexport class TimetableComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.TIMETABLE, locator, route);\n  }\n\n  validate() {\n    return this.validateForm(this.form.data);\n\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.semester);\n    flag = flag && validator.isNotNullObject(form.examDate);\n    console.log(form.examDate);\n    flag = flag && validator.isNotNullObject(form.examTime);\n    flag = flag && validator.isNotNullObject(form.courseId);\n    flag = flag && validator.isNotNullObject(form.subjectId);\n    flag = flag && validator.isNotNullObject(form.description);\n    \n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.courseId = data.courseId;\n    form.subjectId = data.subjectId;\n    form.semester = data.semester;\n    form.examDate = data.examDate;\n    form.examTime = data.examTime;\n    form.description = data.description;\n\n    console.log('Populated Form', form);\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n.grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n  }\\n  </style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom: 5%;\\n background: url(assets/files/wall.jpg);\\n  background-attachment: fixed;\\n  background-size: cover; width:auto;\\n    height: auto;\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2  class=\\\"text-primary font-weight-bold\\\">{{'Change Password' | translate }}</h2>\\n    \\n\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Old Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Old Password' | translate}}\\\">\\n              </div>\\n            </div>\\n          </div>\\n        <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n        \\n        <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'New Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock-alt grey-text \\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"form.data.newPassword\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{'Enter New Password' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>Confirm Password</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock grey-text \\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{'Confirm Password' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.confirmPassword}}</span>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button   (click)=\\\"changePassword()\\\" class=\\\"btn btn-success mr-2\\\">\\n               {{'Update' | translate}} </button>\\n            </div>\\n            <input type=\\\"hidden\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\">\\n            \\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport {HttpServiceService } from '../http-service.service';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./user.component.css']\n})\n\nexport class ChangepasswordComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, public httpService : HttpServiceService) {\n    super(locator.endpoints.USER, locator, route);\n  }\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null, loginId : null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo : 0\n  };\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.oldPassword);\n    flag = flag && validator.isNotNullObject(form.newPassword);\n    flag = flag && validator.isNotNullObject(form.confirmPassword);\n    return flag;\n  }\n\n  changePassword(){\n   var _self = this;\n   this.form.data.loginId = localStorage.getItem(\"loginId\")\n    this.httpService.post(\"http://localhost:8084/User/changepassword\",this.form.data,function (res){\n      \n      if(res.success){\n        _self.form.list = res.result.data;\n        _self.form.message = res.result.message;\n      }\n         });\n  }\n  }\n  \n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; \\nbackground: url(assets/files/edc.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg\\\">\\n        <form name=\\\"myProfile\\\">\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'My Profile'  | translate }}</h2>\\n         \\n\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          \\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'login Id'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Password'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\n                class=\\\"form-control form-control-sm\\\" required />\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\n          </div>\\n          \\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Gender'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select'  | translate }}</option>\\n                  <option value=\\\"Male\\\">{{'Male'  | translate }} </option>\\n                  <option value=\\\"Female\\\">{{'Female'  | translate }} </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Image'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\"\\n                  (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\">\\n\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" readonly>\\n\\n                  <option value=\\\"Active\\\">{{'Active'  | translate }} </option>\\n                  <option value=\\\"Inactive\\\">{{'Inactive'  | translate }} </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            \\n\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            \\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-myprofile',\n  templateUrl: './myprofile.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class MyprofileComponent extends BaseCtl{\n constructor(public locator: ServiceLocatorService, public route: ActivatedRoute,private httpClient: HttpClient) {\n  super(locator.endpoints.USER, locator, route);\n  }\nngOnInit(){\n \n}\n  \n\n}\n","module.exports = \"\\n<app-navbar></app-navbar>\\n<style>\\n#nnn{\\n  background: none;\\n  border: none;\\n}\\n\\n</style> \\n\\n<div class=\\\"content-wrapper\\\"\\nstyle=\\\"\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 105vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <!-- <div class=\\\"col-sm-5\\\"> -->\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'User List' | translate }}</h1>\\n        </div>\\n      </div>\\n      <!-- <button class=\\\"filebtn third\\\">Button 3</button> -->\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.firstName\\\"\\n            placeholder=\\\"{{'Search First Name' | translate}}\\\">\\n\\n        </div>\\n\\n\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dob\\\"\\n            placeholder=\\\"{{'Search dob' | translate}}\\\">\\n\\n        </div> -->\\n        \\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        &nbsp;&nbsp;&nbsp;\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/user')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add User' | translate}}\\n          </button>\\n        </div>\\n        \\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n\\n          <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\n              <tr align=\\\"center\\\">\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\"  name=\\\"list_name\\\" value=\\\"h1\\\" \\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No' | translate}}</th>\\n                <th>{{'Image' | translate}}</th>\\n                <th>{{'First Name' | translate}}</th>\\n                <th>{{'Last Name' | translate}}</th>\\n                <th>{{'Login' | translate}}</th>\\n                <th>{{'Status' | translate}}</th>\\n                <th>{{'Role' | translate}}</th>\\n                <th>{{'Phone' | translate}}</th>\\n                <th>{{'DOB' | translate}}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" [disabled]=\\\"m.roleName=='Admin'\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n\\n                \\n                <td>\\n                  <div *ngIf=\\\"m.imageId\\\"> \\n                    <img src=\\\"http://localhost:8084/User/profilePic/{{m.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n                  </div>\\n                  <div *ngIf=\\\"!m.imageId\\\">\\n                    <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n                  </div>\\n                </td>\\n\\n                <td> {{ m.firstName }} </td>\\n                <td> {{ m.lastName }} </td>\\n                <td> {{ m.loginId }} </td>\\n                <td> {{ m.status }} </td>\\n                <td> {{ m.roleName }} </td>\\n                <td> {{ m.phone }} </td>\\n                <td> {{ m.dob | date : 'dd-MM-yyyy'}} </td>\\n                <td>\\n\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" [disabled]=\\\"m.roleName=='Admin'\\\" (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\n                  cursor: pointer;\\\"></button>\\n                  <!-- <a (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\n                    cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-primary\\\"></i>\\n                  </a> -->\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger \\\"></i>\\n                  </a> -->\\n\\n                </td>\\n              </tr>\\n\\n\\n\\n\\n            </tbody>\\n\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/userlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserListComponent extends BaseListCtl {\n  imageToShow: any;\n  myKey = \"\";\n\ncreateImageFromBlob(image: Blob) {\n   let reader = new FileReader();\n   reader.addEventListener(\"load\", () => {\n      this.imageToShow = reader.result;\n   \n   }, false);\n\n   if (image) {\n      reader.readAsDataURL(image);\n   }\n}\n\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null}, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [ ], // search list \n    pageNo: 0\n  };\n\n\n\n  selectedFile: File;\n  retrievedImage: any;\n  base64Data: any;\n  retrieveResonse: any;\n  message: string;\n  imageName: any;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.USER, locator, route);\n  }\n\n\n  getImage(id) {\n    //Make a call to Sprinf Boot to get the Image Bytes.\n    this.form.data.id = id;\n    console.log(this.form.data.id);\n    \n    this.httpClient.get('http://localhost:8080/User/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\n      this.createImageFromBlob(data);\n      this.myKey= this.form.data.id;\n    }, error => {\n      \n      console.log(error);\n    });\n\n  }\n\n\n}\n ","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n\\n\\n.file-btn{\\n    border: black;\\n}\\n\\n\\n.third {\\n    border-color: #b300b3;\\n    color: #695d29;\\n    box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\\n    transition: all 150ms ease-in-out;\\n  }\\n\\n\\n.third:hover {\\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\\n  }\\n\\n\\n.filebtn {\\n    box-sizing: border-box;\\n    -webkit-appearance: none;\\n       -moz-appearance: none;\\n            appearance: none;\\n    background-color: transparent;\\n    border: 2px solid #e74c3c;\\n    border-radius: 0.6em;\\n    color: #e74c3c;\\n    cursor: pointer;\\n    display: flex;\\n    align-self: center;\\n    font-size: 1rem;\\n    font-weight: 400;\\n    line-height: 1;\\n    margin: 20px;\\n    padding: 1.2em 2.8em;\\n    text-decoration: none;\\n    text-align: center;\\n    text-transform: uppercase;\\n    font-family: 'Montserrat', sans-serif;\\n    font-weight: 700;\\n  }\\n\\n\\n.filebtn:hover, .filebtn:focus {\\n    color: #ffffff;\\n    outline: 0;\\n  }\\n  \\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCOzs7QUFDQTtJQUNJLGFBQWE7QUFDakI7OztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCx3REFBd0Q7SUFFeEQsaUNBQWlDO0VBQ25DOzs7QUFDQTtJQUNFLDBEQUEwRDtFQUM1RDs7O0FBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsd0JBQXdCO09BQ3JCLHFCQUFxQjtZQUNoQixnQkFBZ0I7SUFDeEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixvQkFBb0I7SUFDcEIsY0FBYztJQUNkLGVBQWU7SUFJZixhQUFhO0lBR0wsa0JBQWtCO0lBQzFCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIscUNBQXFDO0lBQ3JDLGdCQUFnQjtFQUNsQjs7O0FBQ0E7SUFDRSxjQUFjO0lBQ2QsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cbi5maWxlLWJ0bntcbiAgICBib3JkZXI6IGJsYWNrO1xufVxuXG4udGhpcmQge1xuICAgIGJvcmRlci1jb2xvcjogI2IzMDBiMztcbiAgICBjb2xvcjogIzY5NWQyOTtcbiAgICBib3gtc2hhZG93OiAwIDAgNDBweCA0MHB4ICMzNDk4ZGIgaW5zZXQsIDAgMCAwIDAgIzM0OThkYjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAxNTBtcyBlYXNlLWluLW91dDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMTUwbXMgZWFzZS1pbi1vdXQ7XG4gIH1cbiAgLnRoaXJkOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCAwICMzNDk4ZGIgaW5zZXQsIDAgMCAxMHB4IDRweCAjMzQ5OGRiO1xuICB9XG4gIC5maWxlYnRuIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgICAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNlNzRjM2M7XG4gICAgYm9yZGVyLXJhZGl1czogMC42ZW07XG4gICAgY29sb3I6ICNlNzRjM2M7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1pdGVtLWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIHBhZGRpbmc6IDEuMmVtIDIuOGVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbiAgLmZpbGVidG46aG92ZXIsIC5maWxlYnRuOmZvY3VzIHtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBvdXRsaW5lOiAwO1xuICB9XG4gIFxuXG4iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n\\n<style type=\\\"text/css\\\">\\n  .log1 {\\n    padding-top: 13%;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n\\n  }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 2%; padding-bottom:2%;\\n\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:100%;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body input-group-addon grad \\\">\\n        <form name=\\\"userForm\\\">\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add User' |\\n            translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update User' |\\n            translate }}</h2>\\n\\n\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Role Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n\\n\\n                <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.data.roleId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.roleId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'role'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.roleId}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.firstName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'firstname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.lastName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'lastname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'login Id' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.loginId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'email'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.loginId}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.password != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'password'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.phone != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'phone'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.alternateMobile != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'mobile'| translate}} </span></div>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.alternateMobile}} </span> -->\\n\\n\\n            <div>\\n         \\n             <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                  required />\\n              </div>\\n            </div>\\n<span *ngIf=\\\"form.inputerror.dob != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'dob'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span> -->\\n          </div>\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\n                  <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\n                </select>\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.gender != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'gender'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.gender}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Image' | translate }}</b>\\n              <!-- <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"></option> -->\\n              <span *ngIf=\\\"!form.data.imageId\\\" class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div *ngIf=\\\"form.data.imageId\\\">\\n                <img src=\\\"http://localhost:8084/User/profilePic/{{form.data.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n              </div>\\n              <div *ngIf=\\\"!form.data.imageId\\\">\\n                <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-picture-o grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\" (change)=\\\"onFileSelect($event.target.files)\\\"\\n                  accept=\\\"image/*\\\">\\n\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bell grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Status' | translate }}</option>\\n                  <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\n                  <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\n                </select>\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'status'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span> -->\\n          </div>\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\n\\n            <div class=\\\"col-md-3\\\"></div>\\n\\n\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"col-md-1\\\"></div>\\n\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/userlist']\\\"\\n                  style=\\\"text-decoration: none; color: white;\\\">{{'List' | translate }}</a>\\n            </div>\\n          </div>\\n\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  fileToUpload: File = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.USER, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n      if (_self.fileToUpload) {\n        console.log('rahul');\n        _self.myFile();\n      }\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Rahul----------.\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n      _self.myFile();\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n  onFileSelect(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  myFile() {\n    console.log(this.form.data.id + 'after super.submit-----');\n    this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\n\n      console.log(this.fileToUpload);\n    }, error => {\n      console.log(error);\n    });\n\n  }\n\n  onSubmitProfile(fileToUpload: File, userform: FormGroup) {\n    const formData = new FormData();\n    let phone = null;\n    formData.append('file', fileToUpload);\n    console.log(this.form.data.id + 'this id number ======');\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.roleId);\n    console.log(form.roleId);\n    flag = flag && validator.isNotNullObject(form.firstName);\n    console.log(form.firstName);\n    flag = flag && validator.isNotNullObject(form.lastName);\n    console.log(form.lastName);\n    flag = flag && validator.isNotNullObject(form.loginId);\n    console.log(form.loginId);\n    flag = flag && validator.isNotNullObject(form.password);\n    console.log(form.password);\n    flag = flag && validator.isNotNullObject(form.phone);\n    console.log(form.phone);\n    flag = flag && validator.isNotNullObject(form.alternateMobile);\n    console.log(form.alternateMobile);\n    flag = flag && validator.isNotNullObject(form.dob);\n    console.log(form.dob);\n    flag = flag && validator.isNotNullObject(form.gender);\n    console.log(form.gender + 'gender--');\n    flag = flag && validator.isNotNullObject(form.status);\n    console.log(form.status + 'status---');\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in usercomponent');\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.loginId = data.loginId;\n    form.password = data.password;\n    form.gender = data.gender;\n    console.log(form.gender + 'gender--');\n    form.alternateMobile = data.alternateMobile;\n    form.phone = data.phone;\n    console.log(form.phone);\n    form.dob = data.dob;\n    form.roleId = data.roleId;\n    form.status = data.status;\n    form.imageId = data.imageId;\n    console.log(form.status + 'status---');\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n  .required-field {\\n    color: red;\\n  }\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add User' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update User' | translate}}</h2>\\n            \\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            \\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Name' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\"   [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter name' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Login ID' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter login ID' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.loginId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Password' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-lock grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter password' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.password}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Date of Birth' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfBirth\\\" [value]=\\\"form.data.dateOfBirth | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.dateOfBirth=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.dateOfBirth}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Mobile' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"phone\\\" (keypress)=\\\"limitInput($event, 10)\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\"></div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.mobile}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/userslist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.USERS, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.loginId);\n    flag = flag && validator.isNotNullObject(form.password);\n    flag = flag && validator.isNotNullObject(form.dateOfBirth);\n    flag = flag && validator.isNotNullObject(form.mobile);\n\n    return flag;\n  }\n\n  limitInput(event: any, maxLength: number) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^(1|9)\\d{0,9}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  limitInputw(event: any, maxLength: Text) {\n    const target = event.target;\n    const value = target.value;\n    if (value.length >= maxLength) {\n      event.preventDefault();\n    } else if (!/^[a-zA-Z]*$\\d{0,15}$/.test(value + event.key)) {\n      event.preventDefault();\n    }\n  }\n\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    console.log(form.quantity + \" inside populateForm method\");\n\n    form.loginId = data.loginId;\n    form.password = data.password;\n    form.dateOfBirth = data.dateOfBirth;\n    form.mobile=data.mobile;\n\n    //let ndate = new Date(data.dob);\n\n    //console.log(form.dob + 'date ------',ndate)\n\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzbGlzdC91c2Vyc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n\\n        <div class=\\\"text-center\\\">\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'User List' | translate }}</h2>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{'Search name' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\"\\n            placeholder=\\\"{{'Search Login ID' | translate}}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\n            placeholder=\\\"{{'Search Date of Birth' | translate}}\\\">\\n        </div>\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search Mobile No' | translate }}\\\"\\n            pattern=\\\"[a-zA-Z0-9\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'mobile')\\\"> \\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters, numbers, and spaces only.\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2\\\">\\n          <button (click)=\\\"forward('/users')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add User' | translate }}\\n          </button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr align=\\\"center\\\">\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No' | translate }}</th>\\n                <th>{{'Name' | translate }}</th>\\n                <th>{{'Login ID' | translate }}</th>\\n                <th>{{'Date of Birth' | translate}}</th>\\n                <th>{{'Mobile' | translate }}</th>\\n                <th>{{'edit' | translate }}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\n                    value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td>{{m.name}}</td>\\n                <td>{{m.loginId}}</td>\\n                <td>{{m.dateOfBirth | date : 'dd-MM-yyyy'}}</td>\\n                <td>{{m.mobile}}</td>\\n                <td> \\n                  <a (click)=\\\"forward('/users/' + m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\"><button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\"\\n                  class=\\\"btn btn-info\\\">{{'Previous' | translate }} </button>\\n              </td>\\n              <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n              <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\n                  [routerLink]=\\\"['/userslist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n              <td>\\n                <button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{'Next' |\\n                  translate }} </button>\\n              </td>\\n            </tr>\\n          </table>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\\n\"","\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-userslist',\n  templateUrl: './userslist.component.html',\n  styleUrls: ['./userslist.component.css']\n})\nexport class UserslistComponent extends BaseListCtl {\n  myKey = \"\";\n\n\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo: 0\n  };\n\n\n\n  base64Data: any;\n  retrieveResonse: any;\n  message: string;\n  isValidMobileInput:boolean=true;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.USERS, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataValidator {\n\n  constructor() {\n  }\n\n  trim(valueToWhite: string) {\n    return valueToWhite.replace(/\\s/g, \"\");\n  }\n  /**\n   * Check is string is not empty\n   * @param val \n   */\n  isNotNull(val: string) {\n    let flag = true;\n    try {\n      if (val) {\n        val = this.trim(val);\n        flag = val.length > 0;\n      } else {\n        flag = false;\n      }\n    } catch (error) {\n      flag = false;\n    }\n    return flag;\n  }\n\n  \n\n  /**\n * Is string is empty\n * @param val\n */\n  isNull(val: any) {\n    return !this.isNotNullObject(val);\n  }\n\n  /**\n   * Is not null object\n   */\n  isNotNullObject(val: any) {\n    let flag = true;\n    try {\n      if (val) {\n        flag = true;\n      } else {\n        flag = false;\n      }\n    } catch (error) {\n      flag = false;\n    }\n    return flag;\n  }\n\n  /**\n   * Is null object\n   */\n  isNullObject(val: any) {\n    return !this.isNotNullObject(val);\n  }\n\n\n  isTrue(val: boolean) {\n    let flag = true;\n    if (val) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n    return flag;\n  }\n\n  /**\n   * \n   * @param val Convets string into number\n   */\n  toInt(val: any) {\n    let returnVal = 0;\n    if (val) {\n      try {\n        returnVal = parseInt(val);\n        if (isNaN(returnVal)) {\n          returnVal = 0;\n        }\n      } catch (error) {\n        returnVal = 0;\n      }\n    }\n    return returnVal;\n  }\n\n  toFloat(val: any) {\n    let returnVal = 0;\n    if (val) {\n      try {\n        returnVal = parseFloat(val);\n        if (isNaN(returnVal)) {\n          returnVal = 0;\n        }\n      } catch (error) {\n        returnVal = 0;\n      }\n    }\n    return returnVal;\n  }\n\n  /**\n   * Create clone pobject\n   * \n   * @param obj \n   */\n  getClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpc2gvd2lzaC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form>\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Wish' | translate}}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update WishList' | translate}}</h2>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{form.message}}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Product' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"form.data.product\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Product' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.Wlist\\\" [value]=\\\"obj.value\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.product != null\\\" class=\\\"alertRedColor\\\">{{form.inputerror.product}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Date' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{form.inputerror.date}} </span>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'UserName' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"form.data.userName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter UserName' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.userName}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{'Remark' | translate}}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill grey-text\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"Remark\\\" [(ngModel)]=\\\"form.data.remark\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Remark' | translate}}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\">{{form.inputerror.remark}}</span>\\n            </div>\\n            <div class=\\\"form-group text-center\\\">\\n              <button *ngIf=\\\"!form.data.id > 0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">{{'Save' | translate}}</button>\\n              <button *ngIf=\\\"form.data.id > 0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{'Update' | translate}}</button>\\n              <button (click)=\\\"forward('/wishlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{'List' | translate}}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-wish',\n  templateUrl: './wish.component.html',\n  styleUrls: ['./wish.component.css']\n})\n\n\nexport class WishComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.WISH, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.product);\n    flag = flag && validator.isNotNullObject(form.date);\n    flag = flag && validator.isNotNullObject(form.userName);\n    flag = flag && validator.isNotNullObject(form.remark);\n\n    return flag;\n  }\n\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.product = data.product;\n    form.date = data.date;\n    form.userName = data.userName;\n    form.remark = data.remark;\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpc2hsaXN0L3dpc2hsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/1024.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Wish List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"product\\\" [(ngModel)]=\\\"form.searchParams.product\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select Product' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.Wlist\\\" [value]=\\\"obj.value\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\" placeholder=\\\"{{ 'Search Date' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.userName\\\" placeholder=\\\"{{ 'Search Username' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'userName')\\\">\\n          <div *ngIf=\\\"!isValidUserNameInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.remark\\\" placeholder=\\\"{{ 'Search Remark' | translate }}\\\" pattern=\\\"[A-Za-z\\\\s]*\\\"\\n            (input)=\\\"validateInput($event, 'remark')\\\">\\n          <div *ngIf=\\\"!isValidRemarkInput\\\" class=\\\"text-danger\\\">\\n            Please enter letters and spaces only.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/wish')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{ 'Add Wish' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{ form.message }}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message !== null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{ form.message }}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' | translate }}</th>\\n              <th>{{ 'Product' | translate }}</th>\\n              <th>{{ 'Date' | translate }}</th>\\n              <th>{{ 'UserName' | translate }}</th>\\n              <th>{{ 'Remark' | translate }}</th>\\n              <th>{{ 'Edit' | translate }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.product }}</td>\\n              <td>{{ m.date | date:'dd-MM-yyyy' }}</td>\\n              <td>{{ m.userName }}</td>\\n              <td>{{ m.remark }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/wish/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo === 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\n          <div *ngIf=\\\"form.list.length === 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/wishlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList === 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-wishlist',\n  templateUrl: './wishlist.component.html',\n  styleUrls: ['./wishlist.component.css']\n})\nexport class WishlistComponent extends BaseListCtl {\n  isValidUserNameInput: boolean = true;\n  isValidRemarkInput: boolean = true;\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.WISH, locator, route);\n  }\n\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    \n    if (field === 'userName') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      this.isValidUserNameInput = !containsNonAlphabetic;\n    }\n\n    if (field === 'remark') {\n      const containsNonAlphabetic = /[^\\sa-zA-Z]/.test(value);\n      this.isValidRemarkInput = !containsNonAlphabetic;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}